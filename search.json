[{"path":"https://ashbythorpe.github.io/selenider/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 selenider authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ashbythorpe.github.io/selenider/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ashby Thorpe. Author, maintainer.","code":""},{"path":"https://ashbythorpe.github.io/selenider/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Thorpe (2023). selenider: Concise, lazy asynchronous wrapper 'RSelenium'. https://github.com/ashbythorpe/selenider, https://ashbythorpe.github.io/selenider/.","code":"@Manual{,   title = {selenider: Concise, lazy and asynchronous wrapper for 'RSelenium'},   author = {Ashby Thorpe},   year = {2023},   note = {https://github.com/ashbythorpe/selenider, https://ashbythorpe.github.io/selenider/}, }"},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Concise, lazy and asynchronous wrapper for RSelenium","text":"selenider aims make web testing scraping much simpler. inspired Java’s Selenide Python’s Selene. provides simple consistent interface [chromote] [RSelenium]. provides following features: elements lazy, meaning actually collect element absolutely necessary. Automatic implicit waiting, meaning functions automatically wait certain amount time (default, 4 seconds) performing action . API designed use pipe operator (|> %>%). quick concise way specify test expectations, including automatic [testthat] integration.","code":""},{"path":"https://ashbythorpe.github.io/selenider/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Concise, lazy and asynchronous wrapper for RSelenium","text":"can install development version selenider like :","code":"# install.packages(\"remotes\") remotes::install_github(\"ashbythorpe/selenider\")"},{"path":"https://ashbythorpe.github.io/selenider/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Concise, lazy and asynchronous wrapper for RSelenium","text":"use selenider, first create session. session object stored globally, don’t need pass subsequent functions. navigate website, use open_url() Use html_element() select element. default, CSS selectors used, options available. However, concise way, allows skip specifying session, using s(). code can translated : functions can chained find child elements, providing much nicer syntax complex XPaths. want select matching HTML elements rather just one, use ss() html_elements(). Note unless something elements, actually collected website. (Todo: Element specific actions e.g. click) selenider provides concise testing interface using html_expect() function. Provide element, one conditions, function wait conditions met. session’s timeout reached, function provide informative error message. (&&), (||) (!) can used conditions logical values. html_expect() accepts functions (is_present) calls (is_present()), allowing expectations defined multiple elements. Note first argument html_expect() can element condition. (Todo: Link documentation conditions)","code":"library(selenider)  session <- selenider_session(\"firefox\")  session #> A selenider session object #> • Open for 0s #> • Browser: \"firefox\" #> • Port: 4567 #> • Currently opened: Nothing #> • Timeout: 4s open_url(\"https://www.google.com/\") html_element(session, \".myclass\") #> A selenider element selecting: #> The first element with css selector \".myclass\"  html_element(session, xpath = \"//div/a\") #> A selenider element selecting: #> The first element with xpath \"//div/a\" s(\".myclass\") #> A selenider element selecting: #> The first element with css selector \".myclass\"  s(\"//div/a\") #> A selenider element selecting: #> The first element with xpath \"//div/a\" s(\".myclass\") |>   html_element(class_name = \"mydiv\") |>   html_element(\"#mychild\") #> A selenider element selecting: #> • The first element with css selector \".myclass\" #> • The first child element with class name \"mydiv\" #> • The first child element with css selector \"#mychild\" # Select all <div> elements ss(\"div\") #> A collection of selenider elements selecting: #> The elements with css selector \"div\"  s(\".myclass\") |>   html_element(\".mychild\") |>   html_elements(\".multiplechild\") #> A selenider element selecting: #> • The first element with css selector \".myclass\" #> • The first child element with css selector \".mychild\" #> • The child elements with css selector \".multiplechild\" # Check that an element exists s(\".myclass\") |>   html_expect(is_present)  # Whoops! This element is not visible! s(\".invisible\") |>    html_expect(is_visible) #> Error in `html_expect()`: #> ! Condition failed after waiting for 4 seconds: #> `is_visible` #> Run `rlang::last_trace()` to see where the error occurred.  # Check that an element is visible and enabled s(\".myclass\") |>   html_element(\"#mychild\") |>   html_expect(is_visible, is_enabled) # Check that an element doesn't exist s(\".myclass\") |>   html_expect(!is_present)  # Check that an element is visible or enabled s(\".myclass\") |>   html_expect(is_visible || is_enabled) elem_1 <- s(\".class1\")  elem_2 <- s(\".class2\")  # Test that either the first or second element exists html_expect(is_present(elem_1) || is_present(elem_2))"},{"path":"https://ashbythorpe.github.io/selenider/reference/as_pretty_dt.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a difftime — as_pretty_dt","title":"Format a difftime — as_pretty_dt","text":"Internal method used print selenider_session() object. Designed used prettyunits::pretty_dt(), prettyunits::pretty_ms() prettyunits::pretty_sec().","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/as_pretty_dt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a difftime — as_pretty_dt","text":"","code":"as_pretty_dt(x)  # S3 method for pretty_dt cli_format(x, style = NULL, ...)"},{"path":"https://ashbythorpe.github.io/selenider/reference/as_pretty_dt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a difftime — as_pretty_dt","text":"x string representing difftime. style, ... used.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/as_pretty_dt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a difftime — as_pretty_dt","text":"object class pretty_dt.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/as_pretty_dt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format a difftime — as_pretty_dt","text":"","code":"x <- as_pretty_dt(prettyunits::pretty_sec(10))  cli::cli_text(\"{.val x}\") #> \"x\""},{"path":"https://ashbythorpe.github.io/selenider/reference/back.html","id":null,"dir":"Reference","previous_headings":"","what":"Move back or forward in browsing history — back","title":"Move back or forward in browsing history — back","text":"back() navigates previously opened URL, previously opened page browsing history. forward() reverses action back(), going next page browsing history.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/back.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move back or forward in browsing history — back","text":"","code":"back(session = NULL)  forward(session = NULL)"},{"path":"https://ashbythorpe.github.io/selenider/reference/back.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move back or forward in browsing history — back","text":"session `selenider_session object. specified, global session object (result get_session()) used.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/back.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Move back or forward in browsing history — back","text":"session object, invisibly.","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/back.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Move back or forward in browsing history — back","text":"","code":"session <- selenider_session()  open_url(\"https://r-project.org\")  open_url(\"https://www.tidyverse.org/\")  back() #> Warning: Previous page in history not found  forward() #> Warning: Next page in history not found  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/cache_element.html","id":null,"dir":"Reference","previous_headings":"","what":"Force an element to be collected and stored — cache_element","title":"Force an element to be collected and stored — cache_element","text":"selenider_element/selenider_elements objects generally lazy, meaning collect actual element DOM absolutely necessary, forget immediately . avoid situations DOM changes element collected, resulting errors unreliable behaviour. functions force element collected stored, making eager rather lazy. useful operating element multiple times, since collecting element improve performance. However, must sure element change page using .","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/cache_element.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Force an element to be collected and stored — cache_element","text":"","code":"cache_element(x, timeout = NULL)"},{"path":"https://ashbythorpe.github.io/selenider/reference/cache_element.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Force an element to be collected and stored — cache_element","text":"x cache_element(), selenider_element object. cache_elements(), selenider_elements object. timeout long wait element(s) exist collecting .","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/cache_element.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Force an element to be collected and stored — cache_element","text":"type x. result cache_element()/cache_elements() can used normal selenider_element/selenider_elements object.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/cache_element.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Force an element to be collected and stored — cache_element","text":"functions make selenider elements permanently eager. sub-elements cached unless specified. example, consider following code:   example, parent element class \".class1\" cached, child element class \".class2\" .","code":"s(\".class1\") |>   html_parent() |>   cache_element() |>   html_element(\".class2\")"},{"path":"https://ashbythorpe.github.io/selenider/reference/cache_element.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Force an element to be collected and stored — cache_element","text":"","code":"html <- \" <div> <p id='specifictext'><\/p> <button><\/button> <\/div> \"  session <- minimal_selenider_session(html) #> [1] \"/tmp/RtmpYVjcaE/file18437835b836.html\"  # Selecting this button may be slow, since we are using relative XPath selectors. button <- s(\"#specifictext\") |>   html_siblings() |>   html_find(has_name(\"button\"))  # But we need to click the button 10 times! # Normally, this would involve fetching the button from the DOM 10 times click_button_10_times <- function(x) {   lapply(1:10, \\(unnused) click(x))   invisible(NULL) }  # But with cache_element(), the button will only be fetched once cached_button <- cache_element(button) #> Error in self$send_command(msg, callback = callback_, error = error_,     timeout = timeout_): Session DC43C3F7BB6B76EE2C7B91CC1ECEE534 is closed.  click_button_10_times(cached_button) #> Error in eval(expr, envir, enclos): object 'cached_button' not found  # But the cached button is less reliable if the DOM is changing execute_js_fn(\"x => { x.outerHTML = '<button><\/button>'; }\", button) #> Error in self$send_command(msg, callback = callback_, error = error_,     timeout = timeout_): Session DC43C3F7BB6B76EE2C7B91CC1ECEE534 is closed.  try(click(cached_button, timeout = 0.1)) #> Error in eval(expr, envir, enclos) : object 'cached_button' not found  # But the non-cached version works click(button) #> Error in self$send_command(msg, callback = callback_, error = error_,     timeout = timeout_): Session DC43C3F7BB6B76EE2C7B91CC1ECEE534 is closed.  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/click.html","id":null,"dir":"Reference","previous_headings":"","what":"Click an element — click","title":"Click an element — click","text":"Clicks HTML element, either simulating mouse click triggering element's \"click\" event. click() left clicks element, double_click() left clicks element two times short period time, right_click() right clicks element, opening context menu.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/click.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Click an element — click","text":"","code":"click(x, js = FALSE, timeout = NULL)  double_click(x, js = FALSE, timeout = NULL)  right_click(x, js = FALSE, timeout = NULL)"},{"path":"https://ashbythorpe.github.io/selenider/reference/click.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Click an element — click","text":"x selenider_element object. js Whether click element using JavaScript. right_click(), ignored Selenium used, since right clicking using RSelenium seem work (JavaScript used instead). timeout long wait element exist.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/click.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Click an element — click","text":"x, invisibly","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/click.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Click an element — click","text":"","code":"html <- \" <button onclick = hidetext() oncontextmenu = showtext()><\/button> <p id = 'texttohide'>Hello!<\/p> \"  js <- \" function hidetext() {   document.getElementById('texttohide').style.display = 'none' }  function showtext() {   document.getElementById('texttohide').style.display = 'block' } \"  session <- minimal_selenider_session(html, js = js) #> [1] \"/tmp/RtmpYVjcaE/file18436142298c.html\"  html_expect(s(\"p\"), is_visible) #> Error in html_expect(s(\"p\"), is_visible): Condition failed after waiting for 4 seconds: #> `is_visible` #> ℹ `x` is not visible. #> Caused by error in `is_visible()`: #> ! `x` does not exist in the DOM.  s(\"button\") |>   click() #> Error in click(s(\"button\")): To click `x`, it must exist. #> ℹ After 4 seconds, `x` was not present.  html_expect(s(\"p\"), is_invisible) #> Error in html_expect(s(\"p\"), is_invisible): Condition failed after waiting for 4 seconds: #> `is_invisible` #> ℹ `x` is visible. #> Caused by error in `is_visible()`: #> ! `x` does not exist in the DOM.  s(\"button\") |>   right_click() #> Error in right_click(s(\"button\")): To right click `x`, it must exist. #> ℹ After 4 seconds, `x` was not present.  html_expect(s(\"p\"), is_visible) #> Error in html_expect(s(\"p\"), is_visible): Condition failed after waiting for 4 seconds: #> `is_visible` #> ℹ `x` is not visible. #> Caused by error in `is_visible()`: #> ! `x` does not exist in the DOM.  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/close_session.html","id":null,"dir":"Reference","previous_headings":"","what":"Close a session object — close_session","title":"Close a session object — close_session","text":"Shut session object, closing browser stopping server.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/close_session.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Close a session object — close_session","text":"","code":"close_session(x = NULL)"},{"path":"https://ashbythorpe.github.io/selenider/reference/close_session.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Close a session object — close_session","text":"x selenider_session object. omitted, global session object closed.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/close_session.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Close a session object — close_session","text":"Nothing.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/close_session.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Close a session object — close_session","text":"","code":"session <- selenider_session(local = FALSE)  close_session(session)  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup(FALSE) # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/execute_js_fn.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute a JavaScript function — execute_js_fn","title":"Execute a JavaScript function — execute_js_fn","text":"Execute JavaScript function zero arguments.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/execute_js_fn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute a JavaScript function — execute_js_fn","text":"","code":"execute_js_fn(fn, ..., .timeout = NULL, .session = NULL)  execute_js_expr(expr, ..., .timeout = NULL, .session = NULL)"},{"path":"https://ashbythorpe.github.io/selenider/reference/execute_js_fn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute a JavaScript function — execute_js_fn","text":"fn string defining function. ... Arguments function/expression. must unnamed, since JavaScript support named arguments. .timeout long wait elements exist DOM. .session session use, ... contain selenider elements. expr expression execute.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/execute_js_fn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute a JavaScript function — execute_js_fn","text":"return value JavaScript function, turned back R object.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/execute_js_fn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Execute a JavaScript function — execute_js_fn","text":"execute_js_expr() simpler version execute_js_fn() can evaluate simple expressions (e.g. \"alert()\"). return value, must explicitly using \"return\". ... can contain selenider_element/selenider_elements objects, collected passed function. However, complex objects (e.g. lists selenider elements) moved JavaScript world correctly. Similarly, nodes lists nodes returned JavaScript function converted corresponding selenider_element/selenider_elements objects, complex objects . elements lazy (see cache_element()), make sure use sure still page.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/get_actual_element.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the element associated with a selenider element — get_actual_element","title":"Get the element associated with a selenider element — get_actual_element","text":"Turn lazy selenium element element collection backendNodeId (chromote) RSelenium::webElement. Use perform certain actions element implemented selenider. get_actual_element() turns selenider_element object single backendNodeId RSelenium::webElement object. function wait object exist DOM. get_actual_elements() turns selenider_elements object list RSelenium::webElement objects.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/get_actual_element.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the element associated with a selenider element — get_actual_element","text":"","code":"get_actual_element(x, timeout = NULL)  get_actual_elements(x, timeout = NULL)"},{"path":"https://ashbythorpe.github.io/selenider/reference/get_actual_element.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the element associated with a selenider element — get_actual_element","text":"x selenider_element selenider_elements object, produced html_element() / html_elements(). timeout timeout use asserting item exists. NULL, timeout selenider_element used.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/get_actual_element.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the element associated with a selenider element — get_actual_element","text":"integer (backendNodeId), anRSelenium::webElement object. get_actual_elements() returns list objects.","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/get_actual_element.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the element associated with a selenider element — get_actual_element","text":"","code":"html <- \" <div> <p>Text<\/p> <p>More text<\/p> <\/div> \"  session <- minimal_selenider_session(html) #> [1] \"/tmp/RtmpYVjcaE/file18431740b709.html\"  elem <- s(\"div\") |>   get_actual_element()  # The webDriver/ChromoteSession can be accessed using session$driver driver <- session$driver  if (inherits(driver, \"ChromoteSession\")) {   driver$DOM$getBoxModel(backendNodeId = elem) } else {   elem$getElementLocation() } #> Error in self$send_command(msg, callback = callback_, error = error_,     timeout = timeout_): Session E74A9BFA6B0E29019B7299D07208FADC is closed.  elems <- ss(\"p\") |>   get_actual_elements()  if (inherits(driver, \"ChromoteSession\")) {   driver$DOM$describeNode(backendNodeId = elems[[1]]) } else {   elems[[1]]$describeElement() } #> Error in elems[[1]]: subscript out of bounds  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/get_page_source.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the HTML of a session — get_page_source","title":"Read the HTML of a session — get_page_source","text":"shortcut xml2::read_html(get_session()).","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/get_page_source.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the HTML of a session — get_page_source","text":"","code":"get_page_source(session = NULL, ...)"},{"path":"https://ashbythorpe.github.io/selenider/reference/get_page_source.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the HTML of a session — get_page_source","text":"session Optionally, selenider_session object. ... Passed read_html.selenider_session()","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/get_page_source.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the HTML of a session — get_page_source","text":"XML document, can operated using rvest.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/get_page_source.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read the HTML of a session — get_page_source","text":"","code":"html <- \" <p>Example text<\/p> \"  session <- minimal_selenider_session(html) #> [1] \"/tmp/RtmpYVjcaE/file1843163b8211.html\"  get_page_source() #> {html_document} #> <html> #> [1] <head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> ... #> [2] <body><\/body>  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/get_session.html","id":null,"dir":"Reference","previous_headings":"","what":"Get or set the local selenider session — get_session","title":"Get or set the local selenider session — get_session","text":"Change locally defined selenider_session() object, allowing used functions like s() without explicitly providing . get_session() retrieves current local session. none created, session created automatically. local_session() sets local session. function uses withr::defer() make sure session closed local session set previous value longer needed. with_session() runs code temporary local session. session closed local session set previous value code finishes executing.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/get_session.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get or set the local selenider session — get_session","text":"","code":"get_session(create = TRUE, .env = rlang::caller_env())  local_session(session, .local_envir = rlang::caller_env(), close = TRUE)  with_session(session, code, close = TRUE)"},{"path":"https://ashbythorpe.github.io/selenider/reference/get_session.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get or set the local selenider session — get_session","text":"create session found, create new one? FALSE session found, NULL returned. .env get_session() creates session, environment session used. session selenider_session() object use. .local_envir environment session used. function associated environment finishes execution, session reset. close close session local session reset? Set FALSE want use session even longer local session. want close session manually, use close_session(). code code run local session set.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/get_session.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get or set the local selenider session — get_session","text":"get_session() returns local selenider_session() object (newly created session). local_session() returns previous local session object (NULL). running get_session() function. with_session() returns result code.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/get_session.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get or set the local selenider session — get_session","text":"Use withr::deferred_run() reset local sessions set using local_session().","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/get_session.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get or set the local selenider session — get_session","text":"","code":"# Since we don't want to open a bunch of sessions for no reason mock_session <- function() {   structure(     list(),     class = c(\"selenider_session\")   ) }  # Create a custom print method for our custom session vctrs::s3_register(\"base::print\", \"selenider_session\", function(xm, ...) cat(\"A selenider session\\n\"))  # Don't set the local session, since we want to do it manually. session_1 <- mock_session() session_2 <- mock_session()  get_session(create = FALSE) # NULL #> A selenider session  local_session(session_1, close = FALSE)  get_session(create = FALSE) #> A selenider session  withr::deferred_run()  get_session(create = FALSE) # NULL #> A selenider session  # By default, the local session is only set inside the function that it is # called. # If we want to set the local session outside the scope of a function, we # need to use the `.local_envir` argument. set_my_session <- function(env = rlang::caller_env()) {   # caller_env() is the environment where the function is called.   local_session(session_1, .local_envir = env, close = FALSE) }  set_my_session()  with_session(   session_2,   {get_session(create = FALSE)},   close = FALSE ) # session_2 #> A selenider session  get_session(create = FALSE) # session_1 #> A selenider session"},{"path":"https://ashbythorpe.github.io/selenider/reference/has_attr.html","id":null,"dir":"Reference","previous_headings":"","what":"Does an element's attribute match a value? — has_attr","title":"Does an element's attribute match a value? — has_attr","text":"has_attr() checks element's attribute matches value, attr_contains() checks element's attribute contains value. has_value() shortcut has_attr(\"value\"): checks element's value matches string number.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/has_attr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does an element's attribute match a value? — has_attr","text":"","code":"has_attr(x, name, value)  attr_contains(x, name, value)  has_value(x, value)"},{"path":"https://ashbythorpe.github.io/selenider/reference/has_attr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does an element's attribute match a value? — has_attr","text":"x selenider_element object. name name attribute. value value attribute. has_attr() has_value(), can string numeric value, attr_contains() can take string.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/has_attr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does an element's attribute match a value? — has_attr","text":"boolean value: TRUE FALSE.","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/has_attr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Does an element's attribute match a value? — has_attr","text":"","code":"html <- \" <input class='myclass' value='1.0' data-customattr='Custom attribute text'><\/p> \"  session <- minimal_selenider_session(html) #> [1] \"/tmp/RtmpYVjcaE/file18435125ae2.html\"  has_attr(s(\"input\"), \"class\", \"myclass\") #> Error in has_attr(s(\"input\"), \"class\", \"myclass\"): `x` does not exist in the DOM.  has_attr(s(\"input\"), \"value\", 1) #> Error in has_attr(s(\"input\"), \"value\", 1): `x` does not exist in the DOM. has_value(s(\"input\"), 1) #> Error in has_value(s(\"input\"), 1): `x` does not exist in the DOM.  attr_contains(s(\"input\"), \"data-customattr\", \"Custom attribute\") #> Error in attr_contains(s(\"input\"), \"data-customattr\", \"Custom attribute\"): `x` does not exist in the DOM.  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/has_css_property.html","id":null,"dir":"Reference","previous_headings":"","what":"Does an element's css property match a value? — has_css_property","title":"Does an element's css property match a value? — has_css_property","text":"Check CSS property (e.g. \"background-color\") element matches value.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/has_css_property.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does an element's css property match a value? — has_css_property","text":"","code":"has_css_property(x, property, value)"},{"path":"https://ashbythorpe.github.io/selenider/reference/has_css_property.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does an element's css property match a value? — has_css_property","text":"x selenider_element object. property name CSS property value value attribute.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/has_css_property.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does an element's css property match a value? — has_css_property","text":"boolean value: TRUE FALSE.","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/has_css_property.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Does an element's css property match a value? — has_css_property","text":"","code":"html <- \" <div style='display:none;'><\/div> \" session <- minimal_selenider_session(html) #> [1] \"/tmp/RtmpYVjcaE/file18433893df8f.html\"  has_css_property(s(\"div\"), \"display\", \"none\") #> Error in has_css_property(s(\"div\"), \"display\", \"none\"): `x` does not exist in the DOM.  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/has_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Does a collection have a certain number of elements? — has_length","title":"Does a collection have a certain number of elements? — has_length","text":"has_length() has_size() checks collection HTML elements contains certain number elements.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/has_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does a collection have a certain number of elements? — has_length","text":"","code":"has_length(x, n)  has_size(x, n)  has_at_least(x, n)"},{"path":"https://ashbythorpe.github.io/selenider/reference/has_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does a collection have a certain number of elements? — has_length","text":"x selenider_elements object. n numeric vector possible lengths x. has_at_least(), must single number compare length x.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/has_length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does a collection have a certain number of elements? — has_length","text":"boolean value: TRUE FALSE","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/has_length.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Does a collection have a certain number of elements? — has_length","text":"has_at_least() checks collection contains least n elements. functions implement retry mechanism, test condition . Use html_expect() html_wait_until() use conditions tests.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/has_length.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Does a collection have a certain number of elements? — has_length","text":"","code":"html <- \" <div class='div1'><\/div> <div class='div2'><\/div> <div class='div3'><\/div> \" session <- minimal_selenider_session(html) #> [1] \"/tmp/RtmpYVjcaE/file184379aafa0a.html\"  has_length(ss(\"div\"), 3) #> [1] FALSE has_at_least(ss(\"div\"), 2) #> [1] FALSE  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/has_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Does an element have a tag name? — has_name","title":"Does an element have a tag name? — has_name","text":"Check element specified tag name","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/has_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does an element have a tag name? — has_name","text":"","code":"has_name(x, name)"},{"path":"https://ashbythorpe.github.io/selenider/reference/has_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does an element have a tag name? — has_name","text":"x selenider_element object. name string.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/has_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does an element have a tag name? — has_name","text":"boolean value.","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/has_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Does an element have a tag name? — has_name","text":"","code":"html <- \" <div id='mydiv'><\/div> \" session <- minimal_selenider_session(html) #> [1] \"/tmp/RtmpYVjcaE/file18431809ab5a.html\"  has_name(s(\"#mydiv\"), \"p\") #> Error in has_name(s(\"#mydiv\"), \"p\"): `x` does not exist in the DOM.  has_name(s(\"#mydiv\"), \"div\") #> Error in has_name(s(\"#mydiv\"), \"div\"): `x` does not exist in the DOM.  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/has_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Does an element contain a pattern? — has_text","title":"Does an element contain a pattern? — has_text","text":"has_text() checks element's inner text contains string, has_exact_text() checks inner text contains string. functions throw error element exist DOM.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/has_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does an element contain a pattern? — has_text","text":"","code":"has_text(x, text)  has_exact_text(x, text)"},{"path":"https://ashbythorpe.github.io/selenider/reference/has_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does an element contain a pattern? — has_text","text":"x selenider_element object. text string, used test element's inner text.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/has_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does an element contain a pattern? — has_text","text":"boolean value: TRUE FALSE.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/has_text.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Does an element contain a pattern? — has_text","text":"functions implement retry mechanism, test condition . Use html_expect() html_wait_until() use conditions tests.","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/has_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Does an element contain a pattern? — has_text","text":"","code":"html <- \" <p>Example text<\/p> <p class='empty'><\/p> \"  session <- minimal_selenider_session(html) #> [1] \"/tmp/RtmpYVjcaE/file18431d8010df.html\"  has_text(s(\"p\"), \"Example\") # TRUE #> Error in has_text(s(\"p\"), \"Example\"): `x` does not exist in the DOM.  has_exact_text(s(\"p\"), \"Example\") # FALSE #> Error in has_exact_text(s(\"p\"), \"Example\"): `x` does not exist in the DOM.  has_exact_text(s(\"p\"), \"Example text\") # TRUE #> Error in has_exact_text(s(\"p\"), \"Example text\"): `x` does not exist in the DOM.  # has_exact_text() is useful for checking when there is no text, # since has_text(\"\") will always be TRUE. has_exact_text(s(\".empty\"), \"\") #> Error in has_exact_text(s(\".empty\"), \"\"): `x` does not exist in the DOM.  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/hover.html","id":null,"dir":"Reference","previous_headings":"","what":"Hover over an element — hover","title":"Hover over an element — hover","text":"Move mouse HTML element hover , without actually clicking interacting .","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/hover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hover over an element — hover","text":"","code":"hover(x, js = FALSE, timeout = NULL)"},{"path":"https://ashbythorpe.github.io/selenider/reference/hover.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hover over an element — hover","text":"x selenider_element object. js Whether hover element using JavaScript. timeout long wait element exist.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/hover.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hover over an element — hover","text":"x, invisibly","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/hover.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hover over an element — hover","text":"","code":"html <- \" <button onmouseover = settext()> <\/button> <p class = 'text'><\/p> \"  js <- \" function settext() {   document.getElementsByClassName('text').item(0).innerHTML = 'Button hovered!' } \"  session <- minimal_selenider_session(html, js = js) #> [1] \"/tmp/RtmpYVjcaE/file18433f38b6fd.html\"  html_expect(s(\".text\"), has_exact_text(\"\")) #> Error in html_expect(s(\".text\"), has_exact_text(\"\")): Condition failed after waiting for 4 seconds: #> `has_exact_text(\"\")` #> ℹ `x` does not have exact text \"\". #> ℹ Actual text: . #> Caused by error in `has_exact_text()`: #> ! `x` does not exist in the DOM.  s(\"button\") |>   hover() #> Error in hover(s(\"button\")): To hover over `x`, it must exist. #> ℹ After 4 seconds, `x` was not present.  html_expect(s(\".text\"), has_text(\"Button hovered!\")) #> Error in html_expect(s(\".text\"), has_text(\"Button hovered!\")): Condition failed after waiting for 4 seconds: #> `has_text(\"Button hovered!\")` #> ℹ `x` does not have text \"Button hovered!\". #> ℹ Actual text: . #> Caused by error in `has_text()`: #> ! `x` does not exist in the DOM.  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/html_ancestors.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the DOM family of an element — html_ancestors","title":"Get the DOM family of an element — html_ancestors","text":"Find elements certain relative position HTML element. html_ancestors() selects every element contains current element (children, grand-children, etc.). html_parent() selects element contains current element. html_siblings() selects every element parent current element. html_children() selects every element connected directly current element. html_descendants() selects every element contained current element. current element direct parent, must type ancestor.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_ancestors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the DOM family of an element — html_ancestors","text":"","code":"html_ancestors(x)  html_parent(x)  html_siblings(x)  html_children(x)  html_descendants(x)"},{"path":"https://ashbythorpe.github.io/selenider/reference/html_ancestors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the DOM family of an element — html_ancestors","text":"x selenider_element object.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_ancestors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the DOM family of an element — html_ancestors","text":"functions return selenider_elements object, except html_parent(), returns selenider_element object (since element can one parent).","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_ancestors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the DOM family of an element — html_ancestors","text":"functions except html_children() html_descendants() use XPath selectors, may slow, especially using chromote backend.","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/html_ancestors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the DOM family of an element — html_ancestors","text":"","code":"html <- \" <html> <body>   <div>     <div id='current'>       <p><\/p>       <div>         <p><\/p>         <br>       <\/div>     <\/div>     <div><\/div>     <p><\/p>   <\/div> <\/body> <\/html> \"  session <- minimal_selenider_session(html) #> [1] \"/tmp/RtmpYVjcaE/file184313285506.html\"  current <- s(\"#current\")  # Get all the names of an element collection html_names <- function(x) {   x |>     as.list() |>     vapply(html_name, FUN.VALUE = character(1)) }  current |>   html_ancestors() |>   html_expect(has_length(3)) |>   html_names() # html, div, body #> Error in html_size(x): To get the number of elements in `x`, its parent must exist. #> After \"timeout\" seconds, `x`'s parent did not exist.  current |>   html_parent() |>   html_name() # div #> Error in get_element_for_action(x, action = action, conditions = list(),     timeout = timeout, failure_messages = c(), conditions_text = c(),     call = call): To get the tag name of `x`, it must exist. #> ℹ After 4 seconds, `x` was not present.  current |>   html_siblings() |>   html_expect(has_length(2)) |>   html_names() # div, p #> Error in html_size(x): To get the number of elements in `x`, its parent must exist. #> After \"timeout\" seconds, `x`'s parent did not exist.  current |>   html_children() |>   html_expect(has_length(2)) |>   html_names() # p, div #> Error in html_size(x): To get the number of elements in `x`, its parent must exist. #> After \"timeout\" seconds, `x`'s parent did not exist.  current |>   html_descendants() |>   html_expect(has_length(4)) |>   html_names() # p, div, p, br #> Error in html_size(x): To get the number of elements in `x`, its parent must exist. #> After \"timeout\" seconds, `x`'s parent did not exist.  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/html_attr.html","id":null,"dir":"Reference","previous_headings":"","what":"Get element attribute — html_attr","title":"Get element attribute — html_attr","text":"Get attribute selenider_element object. html_attr() returns single attribute value string. html_attrs() returns named list containing every attribute. html_value() returns 'value' attribute.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_attr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get element attribute — html_attr","text":"","code":"html_attr(x, name, default = NA_character_, ...)  # S3 method for selenider_element html_attr(x, name, default = NA_character_, timeout = NULL, ...)  html_attrs(x, ...)  # S3 method for selenider_element html_attrs(x, timeout = NULL, ...)  html_value(x, ptype = character(), timeout = NULL)"},{"path":"https://ashbythorpe.github.io/selenider/reference/html_attr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get element attribute — html_attr","text":"x selenider_element object. name name attribute get; string. default default value use attribute exist element. ... used. timeout time wait x exist. ptype type cast value . Useful value integer decimal number. default, value returned string.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_attr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get element attribute — html_attr","text":"html_attr() returns character vector length 1. html_attrs() returns named list strings. return value html_value() type ptype length 1.","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/html_attr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get element attribute — html_attr","text":"","code":"html <- \" <a class='link' href='https://r-project.org'>R<\/a> <input type='number' value='0'> \"  session <- minimal_selenider_session(html) #> [1] \"/tmp/RtmpYVjcaE/file1843723cc5e.html\"  s(\"a\") |>   html_attr(\"href\") #> Error in get_element_for_action(x, action = action, conditions = list(),     timeout = timeout, failure_messages = c(), conditions_text = c(),     call = call): To get the \"href\" attribute of `x`, it must exist. #> ℹ After 4 seconds, `x` was not present.  s(\"a\") |>   html_attrs() #> Error in get_element_for_action(x, action = action, conditions = list(),     timeout = timeout, failure_messages = c(), conditions_text = c(),     call = call): To get the attributes of `x`, it must exist. #> ℹ After 4 seconds, `x` was not present.  s(\"input[type='number']\") |>   html_value(ptype = integer()) #> Error in get_element_for_action(x, action = action, conditions = list(),     timeout = timeout, failure_messages = c(), conditions_text = c(),     call = call): To get the value of `x`, it must exist. #> ℹ After 4 seconds, `x` was not present.  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/html_css_property.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a CSS property of an element — html_css_property","title":"Get a CSS property of an element — html_css_property","text":"Get CSS property element (e.g. \"background-color\"). Specifically, computed style returned, meaning , example, widths heights returned pixels, colors returned RGB value.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_css_property.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a CSS property of an element — html_css_property","text":"","code":"html_css_property(x, name, timeout = NULL)"},{"path":"https://ashbythorpe.github.io/selenider/reference/html_css_property.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a CSS property of an element — html_css_property","text":"x selenider_element object. name name CSS property get. timeout time wait x exist.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_css_property.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a CSS property of an element — html_css_property","text":"string, NA property exist.","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/html_css_property.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a CSS property of an element — html_css_property","text":"","code":"html <- \" <p style='visibility:hidden; color:red;'>Text<\/p> \"  session <- minimal_selenider_session(html) #> [1] \"/tmp/RtmpYVjcaE/file18434c252b8.html\"  s(\"p\") |>   html_css_property(\"visibility\") #> Error in get_element_for_action(x, action = action, conditions = list(),     timeout = timeout, failure_messages = c(), conditions_text = c(),     call = call): To get the \"visibility\" CSS property of `x`, it must exist. #> ℹ After 4 seconds, `x` was not present.  s(\"p\") |>   html_css_property(\"color\") #> Error in get_element_for_action(x, action = action, conditions = list(),     timeout = timeout, failure_messages = c(), conditions_text = c(),     call = call): To get the \"color\" CSS property of `x`, it must exist. #> ℹ After 4 seconds, `x` was not present.  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/html_element.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a single HTML element — html_element","title":"Get a single HTML element — html_element","text":"Find first HTML element using CSS selector, XPath, variety methods.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_element.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a single HTML element — html_element","text":"","code":"html_element(x, ...)  # S3 method for selenider_session html_element(   x,   css = NULL,   xpath = NULL,   id = NULL,   class_name = NULL,   name = NULL,   link_text = NULL,   ... )  # S3 method for selenider_element html_element(   x,   css = NULL,   xpath = NULL,   id = NULL,   class_name = NULL,   name = NULL,   link_text = NULL,   ... )"},{"path":"https://ashbythorpe.github.io/selenider/reference/html_element.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a single HTML element — html_element","text":"x selenider session element. ... Arguments passed methods. css css selector. xpath XPath. id id element want select. class_name class name element want select. name name attribute element want select. link_text link text link element like select.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_element.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a single HTML element — html_element","text":"selenider_element object.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_element.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get a single HTML element — html_element","text":"one method used select element (e.g. css xpath), first element satisfies conditions found. CSS selectors generally recommended options, since usually easiest read. Use \"tag_name\" select tag name, \".class\" select class, \"#id\" select id.","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/html_element.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a single HTML element — html_element","text":"","code":"html <- \" <div class='class1'>   <div id='id1'>     <a href='https://r-project.org'>Click me!<\/a>   <\/div>   <p>Example text<\/p> <\/div> \"  session <- minimal_selenider_session(html) #> [1] \"/tmp/RtmpYVjcaE/file18436aa2c697.html\"  session |>   html_element(\"div\") #> A selenider element selecting: #> The first element with css selector \"div\"  session |>   html_element(name = \"div\") |>   html_element(xpath = \"./p\") #> A selenider element selecting: #> • The first element with name \"div\" #> • The first child element with xpath \"./p\"  s(\"div\") |>   html_element(\"#id1\") #> A selenider element selecting: #> • The first element with css selector \"div\" #> • The first child element with css selector \"#id1\"  s(\"div\") |>   html_element(id = \"id1\") |>   html_element(link_text = \"Click me!\") #> A selenider element selecting: #> • The first element with css selector \"div\" #> • The first child element with id \"id1\" #> • The first child element with link text \"Click me!\"  # Complex Xpath expressions are easier to read as chained CSS selectors. s(\"//div[contains(@class, 'class1')]/div/a\") #> A selenider element selecting: #> The first element with css selector \"//div[contains(@class, 'class1')]/div/a\"  s(\"div.class1\") |>   html_element(\"div\") |>   html_element(\"a\") #> A selenider element selecting: #> • The first element with css selector \"div.class1\" #> • The first child element with css selector \"div\" #> • The first child element with css selector \"a\"  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/html_elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Get multiple HTML elements — html_elements","title":"Get multiple HTML elements — html_elements","text":"Find every available HTML element using CSS selector, XPath, variety methods.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get multiple HTML elements — html_elements","text":"","code":"html_elements(x, ...)  # S3 method for selenider_session html_elements(   x,   css = NULL,   xpath = NULL,   id = NULL,   class_name = NULL,   name = NULL,   link_text = NULL,   ... )  # S3 method for selenider_element html_elements(   x,   css = NULL,   xpath = NULL,   id = NULL,   class_name = NULL,   name = NULL,   link_text = NULL,   ... )"},{"path":"https://ashbythorpe.github.io/selenider/reference/html_elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get multiple HTML elements — html_elements","text":"x selenider session element. ... Arguments passed methods. css css selector. xpath XPath. id id element want select. class_name class name element want select. name name attribute element want select. link_text link text link element like select.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_elements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get multiple HTML elements — html_elements","text":"selenider_elements object.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_elements.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get multiple HTML elements — html_elements","text":"one method used select element (e.g. css xpath), first element satisfies every condition found.","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/html_elements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get multiple HTML elements — html_elements","text":"","code":"html <- \" <div id='outer-div'>   <div>     <p>Text 1<\/p>     <p>Text 2<\/p>     <p>Text 3<\/p>   <\/div> <\/div>  <div><\/div> \"  session <- minimal_selenider_session(html) #> [1] \"/tmp/RtmpYVjcaE/file184349e1c66a.html\"  session |>   html_elements(\"div\") #> A collection of selenider elements selecting: #> The elements with css selector \"div\"  # Or: ss(\"div\") #> A collection of selenider elements selecting: #> The elements with css selector \"div\"  session |>   html_element(\"#outer-div\") |>   html_elements(\"p\") #> A collection of selenider elements selecting: #> • The first element with css selector \"#outer-div\" #> • The child elements with css selector \"p\"    # The above can be shortened to: s(\"#outer-div\") |>   html_elements(\"p\") #> A collection of selenider elements selecting: #> • The first element with css selector \"#outer-div\" #> • The child elements with css selector \"p\"  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/html_equal.html","id":null,"dir":"Reference","previous_headings":"","what":"Are two elements equivalent? — html_equal","title":"Are two elements equivalent? — html_equal","text":"Checks two selenider_element objects point element page. html_equal() equivalent using ==, allows specify timeout value needed.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_equal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Are two elements equivalent? — html_equal","text":"","code":"html_equal(x, y, timeout = NULL)  # S3 method for selenider_element ==(e1, e2)"},{"path":"https://ashbythorpe.github.io/selenider/reference/html_equal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Are two elements equivalent? — html_equal","text":"x, y, e1, e2 selenider_element objects compare. timeout long wait elements present.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_equal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Are two elements equivalent? — html_equal","text":"TRUE FALSE.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_equal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Are two elements equivalent? — html_equal","text":"","code":"html <- \" <div><\/div> <div class='second'>   <p><\/p> <\/div> \"  session <- minimal_selenider_session(html) #> [1] \"/tmp/RtmpYVjcaE/file184341de766c.html\"  s(\"div\") == ss(\"div\")[[1]] #> Error in html_equal(e1, e2): To compare `x` and `y`, both must be present in the DOM. #> After 4 seconds, `x` was not found.  has_p_child <- function(x) {   x |>     html_children() |> # Direct children     html_filter(has_name(\"p\")) |>     has_at_least(1) }  ss(\"div\") |>   html_find(has_p_child) |>   html_equal(s(\".second\")) # TRUE #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa79b14f30> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa79b14f30> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa79b14f30> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa764a7cf8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa764a7cf8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa764a7cf8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa75ed8c58> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa75ed8c58> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa75ed8c58> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa74acf7e0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa74acf7e0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa74acf7e0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa73deed78> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa73deed78> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa73deed78> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7363d7f8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7363d7f8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7363d7f8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa71b57870> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa71b57870> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa71b57870> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78a891a8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78a891a8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78a891a8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b026a50> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b026a50> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b026a50> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7628c350> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7628c350> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7628c350> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b891968> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b891968> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b891968> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76918620> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76918620> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76918620> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76098970> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76098970> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76098970> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7a84e448> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7a84e448> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7a84e448> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa760e7640> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa760e7640> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa760e7640> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78337930> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78337930> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78337930> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7a0a4458> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7a0a4458> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7a0a4458> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77969218> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77969218> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77969218> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77c254d0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77c254d0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77c254d0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa764a69f0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa764a69f0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa764a69f0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa75ecd278> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa75ecd278> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa75ecd278> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa74ab22e8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa74ab22e8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa74ab22e8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa73dceb80> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa73dceb80> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa73dceb80> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa735f5a50> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa735f5a50> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa735f5a50> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa71aca8f0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa71aca8f0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa71aca8f0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa79576c70> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa79576c70> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa79576c70> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7909c5d8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7909c5d8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7909c5d8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa79c13a80> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa79c13a80> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa79c13a80> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77035a60> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77035a60> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77035a60> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b3dded0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b3dded0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b3dded0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa787d2180> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa787d2180> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa787d2180> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7a8c6258> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7a8c6258> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7a8c6258> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7678cf98> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7678cf98> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7678cf98> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7ab31238> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7ab31238> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7ab31238> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78b85e68> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78b85e68> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78b85e68> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b5f1520> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b5f1520> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b5f1520> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7aa402b0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7aa402b0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7aa402b0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7650e798> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7650e798> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7650e798> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa75f2aaa8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa75f2aaa8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa75f2aaa8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa752d4650> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa752d4650> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa752d4650> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa73dfe1e0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa73dfe1e0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa73dfe1e0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa73632de8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa73632de8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa73632de8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa71ae2520> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa71ae2520> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa71ae2520> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa75ae75b0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa75ae75b0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa75ae75b0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7909d170> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7909d170> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7909d170> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78ac54e0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78ac54e0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78ac54e0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa761e46b0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa761e46b0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa761e46b0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa75344610> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa75344610> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa75344610> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7957d3a8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7957d3a8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7957d3a8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7449c838> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7449c838> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7449c838> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa79093f08> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa79093f08> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa79093f08> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78345930> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78345930> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78345930> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa79c17540> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa79c17540> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa79c17540> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa785793e8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa785793e8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa785793e8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76c792f0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76c792f0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76c792f0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7641e8b8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7641e8b8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7641e8b8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa75935568> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa75935568> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa75935568> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa744ba5b0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa744ba5b0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa744ba5b0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa73b758c0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa73b758c0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa73b758c0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa734f4f08> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa734f4f08> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa734f4f08> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa719925f0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa719925f0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa719925f0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7603a458> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7603a458> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7603a458> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b99e140> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b99e140> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b99e140> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7a814088> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7a814088> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7a814088> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b0ca630> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b0ca630> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b0ca630> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa799822a8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa799822a8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa799822a8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa793bd578> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa793bd578> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa793bd578> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa790f0eb8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa790f0eb8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa790f0eb8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa795ce9f0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa795ce9f0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa795ce9f0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b614198> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b614198> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b614198> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7ab5ef38> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7ab5ef38> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7ab5ef38> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78e471f8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78e471f8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78e471f8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7680c308> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7680c308> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7680c308> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa761ff408> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa761ff408> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa761ff408> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa75b4d4a8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa75b4d4a8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa75b4d4a8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa740d5380> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa740d5380> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa740d5380> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa738fa660> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa738fa660> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa738fa660> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa72f94bb8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa72f94bb8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa72f94bb8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa6f8de110> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa6f8de110> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa6f8de110> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa75bd6bd0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa75bd6bd0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa75bd6bd0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7781cbf0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7781cbf0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7781cbf0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78ad64f0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78ad64f0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78ad64f0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa79fd5a98> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa79fd5a98> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa79fd5a98> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77130320> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77130320> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77130320> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa776244c0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa776244c0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa776244c0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa798c10b0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa798c10b0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa798c10b0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b462d28> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b462d28> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b462d28> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78ad1c88> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78ad1c88> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78ad1c88> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b596468> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b596468> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b596468> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78322f38> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78322f38> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78322f38> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa763be9b0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa763be9b0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa763be9b0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa758a3d60> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa758a3d60> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa758a3d60> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7443ac80> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7443ac80> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7443ac80> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa73af6828> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa73af6828> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa73af6828> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7333fbd0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7333fbd0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7333fbd0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa712813c8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa712813c8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa712813c8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b814580> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b814580> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b814580> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77129b60> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77129b60> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77129b60> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77d607c0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77d607c0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77d607c0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78161748> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78161748> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78161748> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78821948> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78821948> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78821948> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa788c6520> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa788c6520> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa788c6520> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78aa7eb0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78aa7eb0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78aa7eb0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78b0f1c8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78b0f1c8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78b0f1c8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7a665ed8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7a665ed8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7a665ed8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78789918> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78789918> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78789918> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa79f1a7d8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa79f1a7d8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa79f1a7d8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa765283a8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa765283a8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa765283a8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa75f052c0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa75f052c0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa75f052c0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa74538c10> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa74538c10> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa74538c10> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa73c194b8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa73c194b8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa73c194b8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa73547740> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa73547740> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa73547740> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa719bed70> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa719bed70> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa719bed70> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b822bf0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b822bf0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b822bf0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa79d0c4d8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa79d0c4d8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa79d0c4d8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa74c1fb38> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa74c1fb38> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa74c1fb38> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7aa4f380> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7aa4f380> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7aa4f380> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7ac14c48> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7ac14c48> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7ac14c48> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76925570> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76925570> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76925570> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa79b28a70> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa79b28a70> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa79b28a70> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76be84f8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76be84f8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76be84f8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa790721a8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa790721a8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa790721a8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b901810> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b901810> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b901810> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa784c6fb8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa784c6fb8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa784c6fb8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78e52350> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78e52350> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78e52350> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa767da870> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa767da870> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa767da870> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa761b4b00> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa761b4b00> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa761b4b00> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa75ce0ba0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa75ce0ba0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa75ce0ba0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa74060448> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa74060448> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa74060448> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa73844f00> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa73844f00> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa73844f00> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7257cef0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7257cef0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7257cef0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa75a76dd8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa75a76dd8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa75a76dd8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78ee5118> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78ee5118> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78ee5118> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7661f760> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7661f760> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7661f760> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77033fa0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77033fa0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77033fa0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76343768> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76343768> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76343768> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa738ad9d8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa738ad9d8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa738ad9d8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa789e3910> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa789e3910> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa789e3910> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa771e2768> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa771e2768> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa771e2768> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa781b8240> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa781b8240> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa781b8240> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78c72048> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78c72048> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78c72048> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7647d508> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7647d508> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7647d508> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7882f2c0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7882f2c0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7882f2c0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76b38ea0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76b38ea0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76b38ea0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76377190> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76377190> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76377190> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa75c0ca80> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa75c0ca80> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa75c0ca80> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa742e8ac0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa742e8ac0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa742e8ac0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa739f1da0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa739f1da0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa739f1da0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa73056d18> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa73056d18> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa73056d18> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa6fcf4a80> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa6fcf4a80> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa6fcf4a80> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa75efeb78> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa75efeb78> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa75efeb78> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7af62288> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7af62288> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7af62288> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7a903618> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7a903618> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7a903618> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7a51b498> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7a51b498> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7a51b498> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa79295f00> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa79295f00> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa79295f00> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78cbf880> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78cbf880> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78cbf880> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7671b570> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7671b570> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7671b570> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7a0be558> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7a0be558> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7a0be558> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7a316c50> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7a316c50> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7a316c50> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77a2a7c0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77a2a7c0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77a2a7c0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa778c1600> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa778c1600> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa778c1600> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76b88d28> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76b88d28> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76b88d28> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa763ab318> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa763ab318> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa763ab318> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa75c2d820> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa75c2d820> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa75c2d820> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa742f5f98> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa742f5f98> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa742f5f98> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa739ed870> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa739ed870> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa739ed870> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa73038720> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa73038720> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa73038720> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa6fcc28c8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa6fcc28c8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa6fcc28c8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76833188> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76833188> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76833188> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77a2eda8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77a2eda8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77a2eda8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78a36460> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78a36460> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78a36460> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7a4c66a8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7a4c66a8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7a4c66a8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76ae48a8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76ae48a8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76ae48a8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b1f8700> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b1f8700> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b1f8700> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa781afe50> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa781afe50> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa781afe50> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b824b10> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b824b10> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b824b10> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77ddefc8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77ddefc8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77ddefc8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78122c90> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78122c90> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78122c90> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7aac3038> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7aac3038> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7aac3038> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa769923c8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa769923c8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa769923c8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa762b5438> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa762b5438> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa762b5438> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7561e660> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7561e660> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7561e660> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa740d5ea8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa740d5ea8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa740d5ea8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa738a6c70> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa738a6c70> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa738a6c70> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa728c0168> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa728c0168> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa728c0168> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7960f8e8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7960f8e8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7960f8e8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa79dc10c0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa79dc10c0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa79dc10c0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78fcb940> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78fcb940> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78fcb940> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78a48120> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78a48120> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78a48120> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa73356538> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa73356538> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa73356538> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7815d898> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7815d898> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7815d898> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa75c082d8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa75c082d8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa75c082d8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77f64b60> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77f64b60> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77f64b60> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7a275400> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7a275400> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7a275400> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b619b08> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b619b08> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b619b08> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa79c43b40> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa79c43b40> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa79c43b40> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa790d39a0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa790d39a0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa790d39a0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa766b3b48> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa766b3b48> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa766b3b48> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76060228> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76060228> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76060228> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7524daf0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7524daf0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7524daf0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa73e85b38> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa73e85b38> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa73e85b38> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa73599670> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa73599670> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa73599670> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa719c5e90> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa719c5e90> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa719c5e90> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7ab718e8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7ab718e8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7ab718e8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa79caec90> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa79caec90> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa79caec90> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77a7b428> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77a7b428> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77a7b428> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77da7fe8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77da7fe8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77da7fe8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa79fe6588> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa79fe6588> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa79fe6588> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7af02300> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7af02300> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7af02300> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77057090> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77057090> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77057090> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77fd2098> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77fd2098> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77fd2098> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b1c51e8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b1c51e8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b1c51e8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77a2b6d8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77a2b6d8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77a2b6d8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77c60220> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77c60220> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77c60220> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76b1d568> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76b1d568> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76b1d568> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa763080d0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa763080d0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa763080d0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7537dab0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7537dab0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7537dab0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa740dec10> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa740dec10> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa740dec10> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7389b498> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7389b498> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7389b498> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa725b5fa0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa725b5fa0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa725b5fa0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa763c71d8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa763c71d8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa763c71d8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b3336a0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b3336a0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b3336a0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77dfc168> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77dfc168> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77dfc168> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b5ca7f8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b5ca7f8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b5ca7f8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa733b8bb0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa733b8bb0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa733b8bb0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7a202168> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7a202168> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7a202168> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7ac6c450> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7ac6c450> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7ac6c450> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7afa9bc0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7afa9bc0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7afa9bc0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7716d288> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7716d288> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7716d288> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77b26f38> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77b26f38> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77b26f38> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa79241020> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa79241020> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa79241020> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7a0fa518> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7a0fa518> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7a0fa518> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76492200> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76492200> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76492200> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa758e4588> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa758e4588> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa758e4588> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa743c1498> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa743c1498> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa743c1498> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa73a22f40> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa73a22f40> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa73a22f40> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa73016f38> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa73016f38> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa73016f38> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa6f856cd0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa6f856cd0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa6f856cd0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7a5c86f8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7a5c86f8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7a5c86f8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa766092c8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa766092c8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa766092c8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76c88f00> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76c88f00> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76c88f00> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78490eb8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78490eb8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78490eb8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78a49738> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78a49738> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78a49738> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7835a0f0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7835a0f0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7835a0f0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa79068b48> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa79068b48> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa79068b48> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b5695d8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b5695d8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b5695d8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7738ef80> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7738ef80> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7738ef80> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b5987e8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b5987e8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b5987e8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa79eabf08> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa79eabf08> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa79eabf08> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa764ba7c0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa764ba7c0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa764ba7c0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa758f6de8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa758f6de8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa758f6de8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa743dc5d8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa743dc5d8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa743dc5d8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa73a1da68> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa73a1da68> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa73a1da68> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa72fefad0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa72fefad0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa72fefad0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa6f80c6a8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa6f80c6a8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa6f80c6a8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7a679fb0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7a679fb0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7a679fb0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa79223790> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa79223790> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa79223790> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b80df88> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b80df88> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b80df88> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b0d9bd0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b0d9bd0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b0d9bd0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa772b3fe8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa772b3fe8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa772b3fe8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77606d58> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77606d58> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77606d58> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7804b280> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7804b280> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7804b280> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa79f3e398> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa79f3e398> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa79f3e398> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa785080e0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa785080e0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa785080e0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b5f59a0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b5f59a0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b5f59a0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76c758a0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76c758a0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76c758a0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7636b110> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7636b110> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7636b110> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa759e18c8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa759e18c8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa759e18c8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa740d50e0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa740d50e0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa740d50e0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7385bd10> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7385bd10> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7385bd10> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa724ad058> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa724ad058> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa724ad058> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa75cc0a10> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa75cc0a10> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa75cc0a10> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa79d19b50> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa79d19b50> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa79d19b50> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa75b8e960> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa75b8e960> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa75b8e960> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7929cdb8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7929cdb8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7929cdb8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa766108b8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa766108b8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa766108b8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7857bf10> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7857bf10> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7857bf10> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7922ae30> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7922ae30> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7922ae30> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7acc4820> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7acc4820> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7acc4820> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa770742a8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa770742a8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa770742a8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa780e3718> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa780e3718> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa780e3718> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78d8a510> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78d8a510> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78d8a510> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7675a000> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7675a000> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7675a000> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa760a5128> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa760a5128> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa760a5128> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7524fd20> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7524fd20> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7524fd20> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa73dd42b0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa73dd42b0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa73dd42b0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa73500798> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa73500798> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa73500798> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa71370068> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa71370068> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa71370068> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa79bfe1e8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa79bfe1e8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa79bfe1e8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78fcd710> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78fcd710> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78fcd710> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76243108> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76243108> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76243108> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa791c34f8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa791c34f8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa791c34f8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa792a1db0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa792a1db0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa792a1db0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7800f720> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7800f720> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7800f720> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa79dda990> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa79dda990> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa79dda990> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7a31d200> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7a31d200> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7a31d200> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b964258> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b964258> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b964258> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa79841578> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa79841578> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa79841578> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7688d588> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7688d588> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7688d588> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76177c80> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76177c80> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76177c80> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa75a8e740> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa75a8e740> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa75a8e740> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa73ec8088> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa73ec8088> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa73ec8088> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7358af60> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7358af60> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7358af60> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa718c7c80> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa718c7c80> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa718c7c80> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78a6e120> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78a6e120> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78a6e120> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76323458> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76323458> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76323458> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78704340> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78704340> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78704340> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa74434cf0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa74434cf0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa74434cf0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa75ec6270> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa75ec6270> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa75ec6270> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7913e738> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7913e738> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7913e738> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b56d220> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b56d220> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b56d220> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77178f08> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77178f08> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77178f08> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76e92838> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76e92838> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76e92838> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b96f068> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b96f068> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b96f068> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76ca89f8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76ca89f8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76ca89f8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7633ea10> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7633ea10> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7633ea10> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7561b8f8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7561b8f8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7561b8f8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa74071360> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa74071360> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa74071360> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa73723470> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa73723470> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa73723470> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa71ad4a78> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa71ad4a78> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa71ad4a78> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa767f5bc0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa767f5bc0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa767f5bc0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa79188770> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa79188770> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa79188770> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa783ca100> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa783ca100> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa783ca100> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa767e4288> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa767e4288> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa767e4288> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b8a13e0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b8a13e0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b8a13e0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7612b410> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7612b410> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7612b410> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7adfad60> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7adfad60> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7adfad60> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b3fbf50> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b3fbf50> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b3fbf50> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa780d3e38> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa780d3e38> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa780d3e38> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76be3570> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76be3570> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76be3570> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76b13690> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76b13690> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76b13690> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7628b540> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7628b540> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7628b540> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa75ce8298> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa75ce8298> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa75ce8298> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa73fd5148> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa73fd5148> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa73fd5148> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa73650d40> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa73650d40> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa73650d40> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa719c8b40> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa719c8b40> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa719c8b40> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa79405c70> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa79405c70> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa79405c70> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7a8ec948> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7a8ec948> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7a8ec948> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78705a00> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78705a00> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78705a00> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7acaa340> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7acaa340> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7acaa340> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78c7e360> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78c7e360> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78c7e360> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76d2b6a8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76d2b6a8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76d2b6a8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7a8dddb0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7a8dddb0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7a8dddb0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b491f98> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b491f98> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b491f98> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77bd5140> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77bd5140> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77bd5140> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77c2f798> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77c2f798> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77c2f798> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa768d3a30> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa768d3a30> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa768d3a30> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76188a48> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76188a48> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76188a48> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa75993c58> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa75993c58> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa75993c58> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa73e4f7e0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa73e4f7e0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa73e4f7e0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa734f76b0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa734f76b0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa734f76b0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7126b2c0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7126b2c0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7126b2c0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7ad84ab0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7ad84ab0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7ad84ab0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7a41cb08> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7a41cb08> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7a41cb08> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76ed47a0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76ed47a0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76ed47a0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7684fb60> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7684fb60> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7684fb60> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76803db8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76803db8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76803db8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78a92118> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78a92118> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78a92118> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77fb7c28> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77fb7c28> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77fb7c28> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7af76f18> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7af76f18> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7af76f18> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78d18f20> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78d18f20> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78d18f20> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7907fb40> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7907fb40> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7907fb40> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7662cd18> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7662cd18> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7662cd18> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa75f19db0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa75f19db0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa75f19db0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7448db50> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7448db50> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7448db50> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa73a40178> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa73a40178> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa73a40178> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa72edbc38> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa72edbc38> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa72edbc38> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b0c7548> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b0c7548> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b0c7548> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7a928638> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7a928638> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7a928638> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa75bd2258> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa75bd2258> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa75bd2258> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7a7bba68> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7a7bba68> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7a7bba68> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa79fd7bb0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa79fd7bb0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa79fd7bb0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77a1e398> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77a1e398> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77a1e398> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7898d818> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7898d818> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7898d818> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa770c9718> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa770c9718> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa770c9718> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77b2e678> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77b2e678> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77b2e678> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b9a6b90> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b9a6b90> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b9a6b90> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76b7a740> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76b7a740> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76b7a740> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa762b2910> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa762b2910> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa762b2910> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa75cda5e0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa75cda5e0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa75cda5e0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa73fa6290> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa73fa6290> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa73fa6290> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa735abd98> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa735abd98> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa735abd98> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa717b1018> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa717b1018> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa717b1018> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7803d4b8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7803d4b8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7803d4b8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77432300> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77432300> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77432300> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78e5ad48> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78e5ad48> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78e5ad48> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7a8189b8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7a8189b8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7a8189b8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa791acf90> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa791acf90> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa791acf90> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76e912f0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76e912f0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76e912f0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa791f1070> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa791f1070> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa791f1070> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78c167a0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78c167a0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78c167a0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7735f2f8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7735f2f8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7735f2f8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa79a70610> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa79a70610> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa79a70610> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa764e1288> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa764e1288> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa764e1288> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa758966c8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa758966c8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa758966c8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa74156ad0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa74156ad0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa74156ad0> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7383f408> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7383f408> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7383f408> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa71c19ba8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa71c19ba8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa71c19ba8> #>  #>  #> $data #> list() #>  #> attr(,\"class\") #> [1] \"eager_list\" #> Error in html_equal(html_find(ss(\"div\"), has_p_child), s(\".second\")): To compare `x` and `y`, both must be present in the DOM. #> After 4 seconds, `x` was not found.  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/html_expect.html","id":null,"dir":"Reference","previous_headings":"","what":"Test one or more conditions on HTML elements — html_expect","title":"Test one or more conditions on HTML elements — html_expect","text":"html_expect() waits set conditions return TRUE. , certain period time (default 4 seconds), happen, informative error thrown. Otherwise, original element returned. html_wait_until() , returns logical value (whether test passed), allowing handle failure case explicitly.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_expect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test one or more conditions on HTML elements — html_expect","text":"","code":"html_expect(x, ..., testthat = NULL, timeout = NULL)  html_wait_until(x, ..., timeout = NULL)"},{"path":"https://ashbythorpe.github.io/selenider/reference/html_expect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test one or more conditions on HTML elements — html_expect","text":"x selenider_element/selenider_elements object, condition. ... <dynamic-dots> Function calls functions must return logical value. multiple conditions given, must TRUE test pass. testthat Whether treat expectation testthat test. need explicitly provide time, since default, can use testthat::is_testing() figure whether html_expect() called within testthat test. timeout number seconds wait condition pass. specified, timeout used x used, timeout local session element given.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_expect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test one or more conditions on HTML elements — html_expect","text":"html_expect() returns element(s) x, NULL element collection elements given x. html_wait_for() returns boolean flag: TRUE test passes, FALSE otherwise.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_expect.html","id":"conditions","dir":"Reference","previous_headings":"","what":"Conditions","title":"Test one or more conditions on HTML elements — html_expect","text":"Conditions can supplied functions calls. Functions allow use unary conditions without formatting call (e.g. is_present rather is_present()). also allows make use R's anonymous function syntax quickly create custom conditions. x supplied first argument function. Function calls allow use conditions take multiple arguments (e.g. has_text()) without use intermediate function. call modified x first argument function call. example, has_text(\"\") modified become: has_text(x, \"\"). (&&), (||) (!) functions can used types conditions. one condition given ..., combined using &&.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_expect.html","id":"custom-conditions","dir":"Reference","previous_headings":"","what":"Custom conditions","title":"Test one or more conditions on HTML elements — html_expect","text":"function takes selenider element element collection first argument, returns logical value, can used condition. Additionally, functions provide features make creating custom conditions easy: Errors class expect_error_continue handled, function prevented terminating early. means element found, function retry instead immediately throwing error. selenider functions used inside conditions timeout, default, set 0, ignoring local timeout. important, since html_expect() html_wait_until() implement retry mechanic manually. override default, manually specify timeout. two features allow use functions like html_text() access properties element, without needing worry errors throw timeouts use. See Examples examples custom condition. custom conditions can also used html_filter() html_find().","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/html_expect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test one or more conditions on HTML elements — html_expect","text":"","code":"html <- \" <div class='class1'> <button id='disabled-button' disabled>Disabled<\/button> <p style='visibility:hidden;'>Example text<\/p> <button id='enabled-button'>Enabled<\/button> <\/div>  <div class='class3'> <\/div> \" session <- minimal_selenider_session(html) #> [1] \"/tmp/RtmpYVjcaE/file18437c14742c.html\"  s(\".class1\") |>   html_expect(is_present) #> Error in html_expect(s(\".class1\"), is_present): Condition failed after waiting for 4 seconds: #> `is_present` #> ℹ `x` is not present.  s(\"#enabled-button\") |>   html_expect(is_visible, is_enabled) #> Error in html_expect(s(\"#enabled-button\"), is_visible, is_enabled): Condition failed after waiting for 4 seconds: #> `is_visible` #> ℹ `x` is not visible. #> Caused by error in `is_visible()`: #> ! `x` does not exist in the DOM.  s(\"#disabled-button\") |>   html_expect(is_disabled) #> Error in html_expect(s(\"#disabled-button\"), is_disabled): Condition failed after waiting for 4 seconds: #> `is_disabled` #> ℹ `x` is enabled. #> Caused by error in `is_enabled()`: #> ! `x` does not exist in the DOM.  # Error: element is visible but not enabled s(\"#disabled-button\") |>   html_expect(is_visible, is_enabled, timeout = 0.5) |>   try() # Since this condition will fail #> Error in html_expect(s(\"#disabled-button\"), is_visible, is_enabled, timeout = 0.5) :  #>   Condition failed after waiting for 0.5 seconds: #> `is_visible` #> ℹ `x` is not visible. #> Caused by error in `is_visible()`: #> ! `x` does not exist in the DOM.  s(\".class2\") |>   html_expect(!is_present, !is_in_dom, is_absent) # All 3 are equivalent  # All other conditions will error if the element does not exist s(\".class2\") |>   html_expect(is_invisible, timeout = 0.1) |>   try() #> Error in html_expect(s(\".class2\"), is_invisible, timeout = 0.1) :  #>   Condition failed after waiting for 0.1 seconds: #> `is_invisible` #> ℹ `x` is visible. #> Caused by error in `is_visible()`: #> ! `x` does not exist in the DOM.  # html_expect() returns the element, so can be used in chains s(\"#enabled-button\") |>   html_expect(is_visible && is_enabled) |>   click() #> Error in html_expect(s(\"#enabled-button\"), is_visible && is_enabled): Condition failed after waiting for 4 seconds: #> `is_visible && is_enabled` #> ℹ `x` does not exist, which may have caused the condition to fail. #> Caused by error in `is_visible()`: #> ! `x` does not exist in the DOM. # Note that click() will do this automatically  s(\"p\") |>   html_expect(is_hidden, has_exact_text(\"Example text\")) #> Error in html_expect(s(\"p\"), is_hidden, has_exact_text(\"Example text\")): Condition failed after waiting for 4 seconds: #> `is_hidden` #> ℹ `x` is displayed. #> Caused by error in `is_visible()`: #> ! `x` does not exist in the DOM.  # Or use an anonymous function s(\"p\") |>   html_expect(\\(elem) identical(html_text(elem), \"Example text\")) #> Error in html_expect(s(\"p\"), function(elem) identical(html_text(elem),     \"Example text\")): Condition failed after waiting for 4 seconds: #> `function(elem) identical(html_text(elem), \"Example text\")` #> ℹ `x` does not exist, which may have caused the condition to fail. #> Caused by error in `get_element_for_action()`: #> ! To get the text inside `x`, it must exist. #> ℹ After 0 seconds, `x` was not present.  # If your conditions are not specific to an element, you can omit the `x` argument elem_1 <- s(\".class1\") elem_2 <- s(\".class2\")  html_expect(is_present(elem_1) || is_present(elem_2)) #> Error in html_expect(is_present(elem_1) || is_present(elem_2)): Condition failed after waiting for 4 seconds: #> `is_present(elem_1) || is_present(elem_2)`  # We can now use the conditions on their own to figure out which element exists if (is_present(elem_1)) {   print(\"Element 1 is visible\") } else {   print(\"Element 2 is visible\") } #> [1] \"Element 2 is visible\"  # Use html_wait_until() to handle failures manually elem <- s(\".class2\") if (html_wait_until(elem, is_present)) {   click(elem) } else {   reload() }  # Creating a custom condition is easiest with an anonymous function s(\"p\") |>   html_expect(     \\(elem) elem |>       html_text() |>       grepl(pattern = \"Example .*\")   ) #> Error in html_expect(s(\"p\"), function(elem) grepl(html_text(elem), pattern = \"Example .*\")): Condition failed after waiting for 4 seconds: #> `function(elem) grepl(html_text(elem), pattern = \"Example .*\")` #> ℹ `x` does not exist, which may have caused the condition to fail. #> Caused by error in `get_element_for_action()`: #> ! To get the text inside `x`, it must exist. #> ℹ After 0 seconds, `x` was not present.  # Or create a function, to reuse the condition multiple times text_contains <- function(x, pattern) {   text <- html_text(x)      grepl(pattern, text) }  s(\"p\") |>   html_expect(text_contains(\"Example *\")) #> Error in html_expect(s(\"p\"), text_contains(\"Example *\")): Condition failed after waiting for 4 seconds: #> `text_contains(\"Example *\")` #> ℹ `x` does not exist, which may have caused the condition to fail. #> Caused by error in `get_element_for_action()`: #> ! To get the text inside `x`, it must exist. #> ℹ After 0 seconds, `x` was not present.  # If we want to continue on error, we need to use the \"expect_error_continue\" class # This involves making a custom error object error_condition <- function() {   my_condition <- list(message = \"Custom error!\")   class(my_condition) <- c(\"expect_error_continue\", \"error\", \"condition\")   stop(my_condition) }  # This is much easier with rlang::abort() / cli::cli_abort(): error_condition_2 <- function() {   rlang::abort(\"Custom error!\", class = \"expect_error_continue\") }  # This error will not be caught try(html_expect(stop(\"Uncaught error!\"))) #> Error in eval_tidy(x, data = data_mask) : Uncaught error!  # These will eventually throw an error, but will wait 0.5 seconds to do so. try(html_expect(error_condition(), timeout = 0.5)) #> Error in html_expect(error_condition(), timeout = 0.5) :  #>   Condition failed after waiting for 0.5 seconds: #> `error_condition()` #> Caused by error: #> ! Custom error! try(html_expect(error_condition_2(), timeout = 0.5)) #> Error in html_expect(error_condition_2(), timeout = 0.5) :  #>   Condition failed after waiting for 0.5 seconds: #> `error_condition_2()` #> Caused by error in `error_condition_2()`: #> ! Custom error!  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/html_expect_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Test conditions on multiple elements — html_expect_all","title":"Test conditions on multiple elements — html_expect_all","text":"html_expect_all() html_wait_until_all() complements html_expect() html_wait_until() test conditions multiple elements element collection.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_expect_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test conditions on multiple elements — html_expect_all","text":"","code":"html_expect_all(x, ..., testthat = NULL, timeout = NULL)  html_wait_until_all(x, ..., timeout = NULL)"},{"path":"https://ashbythorpe.github.io/selenider/reference/html_expect_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test conditions on multiple elements — html_expect_all","text":"x selenider_elements() object. ... <dynamic-dots> Function calls functions must return logical value. multiple conditions given, must TRUE test pass. See html_expect() details. testthat Whether treat expectation testthat test. need explicitly provide time, since default, can use testthat::is_testing() figure whether html_expect() called within testthat test. timeout number seconds wait condition pass. specified, timeout used x used, timeout local session element given.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_expect_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test conditions on multiple elements — html_expect_all","text":"html_expect_all() returns elements x, NULL element collection elements given x. html_wait_until_all() returns boolean flag: TRUE test passes, FALSE otherwise.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_expect_all.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test conditions on multiple elements — html_expect_all","text":"x contain elements, html_expect_all() html_wait_until_all() succeed. may want first verify least one element exists has_at_least(). html_expect_all() html_wait_until_all() can thought alternatives use (vapply(FUN.VALUE = logical(1))) (purrr::every()) within html_expect() html_wait_until(). example, following two expressions equivalent (x element collection).   However, second example give detailed error message failure.","code":"html_expect(x, \\(element) all(vapply(as.list(element), is_present, logical(1)))) html_expect_all(x, is_present)"},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/html_expect_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test conditions on multiple elements — html_expect_all","text":"","code":"html <- \" <div id='div1'>Content 1<\/div> <div id='div2'>Content 2<\/div> <div id='div3' style='display:none;'>Content 3<\/div> <div id='div4'>Content 4<\/div> \"  session <- minimal_selenider_session(html) #> [1] \"/tmp/RtmpYVjcaE/file184338a5cff1.html\"  ss(\"div\") |>   html_expect_all(is_visible, timeout = 0.1) |>   try()  ss(\"div\")[-3] |>   html_expect_all(is_visible)  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/html_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a subset of HTML elements — html_filter","title":"Extract a subset of HTML elements — html_filter","text":"Operators extract subset elements, single element, selenider element collection. html_filter() html_find() allow use conditions filter HTML elements (see is_present() conditions). html_find() returns first element satisfies one conditions, html_filter() returns every element satisfies conditions. [ [[ numeric subscript can used element collection filter elements position. [ returns single element specified location, [[ returns collection elements one position.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a subset of HTML elements — html_filter","text":"","code":"html_filter(x, ...)  html_find(x, ...)  # S3 method for selenider_elements [(x, i)  # S3 method for selenider_elements [[(x, i)"},{"path":"https://ashbythorpe.github.io/selenider/reference/html_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a subset of HTML elements — html_filter","text":"x selenider_elements object. ... <dynamic-dots> Conditions (functions function calls) used filter elements x. number ([, vector one numbers) used select elements position.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a subset of HTML elements — html_filter","text":"html_filter() [ return selenider_elements object, since can result multiple elements. html_find() [[ return single selenider_element object.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_filter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract a subset of HTML elements — html_filter","text":"html_element() html_elements() functions, functions lazy, meaning elements fetched filtered needed. Conditions can functions function calls (see html_expect() details).","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/html_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract a subset of HTML elements — html_filter","text":"","code":"html <- \" <button disabled>Button 1<\/button> <button>Button 2<\/button> <p>Text<\/p> <div style='display:none;'><\/div> \" session <- minimal_selenider_session(html) #> [1] \"/tmp/RtmpYVjcaE/file18434d1d2170.html\"  elements <- ss(\"./*\")  # Gives the same result as s() elements[[1]] #> A selenider element selecting: #> The first element with css selector \"./*\"  elements[1:3] #> A collection of selenider elements selecting: #> The 1st, 2nd, and 3rd elements with css selector \"./*\"  elements[-2] #> A collection of selenider elements selecting: #> All elements with css selector \"./*\" except the second  elements |>   html_filter(is_visible) #> A collection of selenider elements selecting: #> • The elements with css selector \"./*\" matching the following condition: #>   `is_visible`  elements |>   html_find(is_visible) #> A selenider element selecting: #> • The first element with css selector \"./*\" matching the following condition: #>   `is_visible`  # The above is equivalent to: visible_elems <- elements |>   html_filter(is_visible) visible_elems[[1]] #> A selenider element selecting: #> • The first element with css selector \"./*\" matching the following condition: #>   `is_visible`  # In R >= 4.3.0, we can instead do: # ss(\".class1\") |> #   html_filter(is_visible) |> #   _[[1]]  ss(\"button\") |>   html_filter(is_enabled) #> A collection of selenider elements selecting: #> • The elements with css selector \"button\" matching the following condition: #>   `is_enabled`  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/html_flatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Iterate over an element collection — html_flatmap","title":"Iterate over an element collection — html_flatmap","text":"Use html_flatmap() want select sub-elements element collection. html_flatmap() allows apply function element selenider_elements object, provided function returns selenider_element/selenider_elements object . result flattened single selenider_elements object. benefit traditional iteration techniques laziness elements maintained, nothing fetched DOM. .list() transforms selenider_elements object list selenider_element objects. result can used loops higher order functions like lapply()/purrr::map() (whereas selenider_element object ) element_list() underlying function called element_list(). html_flatmap() works executing .f mock element, recording results x. means matter length x, .f evaluated , html_flatmap() call. reason, .f invoke side effects anything selecting sub-elements. .list()/element_list() essentially turns x : list(x[[1]], x[[2]], ...) However, , length x must computed. means element inside list still lazy, list considered lazy, since number elements DOM may change. avoid problems, recommended use element list just created, make sure list accurate representation DOM used.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_flatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Iterate over an element collection — html_flatmap","text":"","code":"html_flatmap(x, .f, ...)  # S3 method for selenider_elements as.list(x, timeout = NULL, ...)  element_list(x, timeout = NULL)"},{"path":"https://ashbythorpe.github.io/selenider/reference/html_flatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Iterate over an element collection — html_flatmap","text":"x selenider_elements object. .f function apply element x. ... Passed .f. timeout long wait x exist computing length.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_flatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Iterate over an element collection — html_flatmap","text":"html_flatmap() returns selenider_element object. .list()/element_list() returns list selenider_element objects.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_flatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Iterate over an element collection — html_flatmap","text":"","code":"html <- \" <div id='div1'>   <p>Text 1<\/p> <\/div> <div id='div2'>   <p>Text 2<\/p> <\/div> <div id='div3'>   <p>Text 3<\/p> <\/div> <div id='div4'>   <p>Text 4<\/p> <\/div> \"  session <- minimal_selenider_session(html) #> [1] \"/tmp/RtmpYVjcaE/file184317b67ac.html\"  divs <- ss(\"div\")  # Get the <p> tag inside each div. divs |>   html_flatmap(\\(x) x |> html_element(\"p\")) #> A collection of selenider elements selecting: #> • The elements with css selector \"div\" #> • The first child of each element with css selector \"p\"  # Or: p_tags <- divs |>   html_flatmap(html_element, \"p\")  # To get the text in each tag, we can't use html_flatmap() for (elem in as.list(p_tags)) {   print(html_text(elem)) } #> list()  # Or: lapply(as.list(p_tags), html_text) #> list() #> list()  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/html_flatten.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple HTML elements — html_flatten","title":"Combine multiple HTML elements — html_flatten","text":"Combine set selenider_element/selenider_elements objects single selenider_elements object, allowing perform actions . c() html_flatten() thing, html_flatten() works lists selenider_element/selenider_elements objects.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_flatten.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple HTML elements — html_flatten","text":"","code":"html_flatten(...)  # S3 method for selenider_element c(...)  # S3 method for selenider_elements c(...)"},{"path":"https://ashbythorpe.github.io/selenider/reference/html_flatten.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple HTML elements — html_flatten","text":"... <dynamic-dots> selenider_element selenider_elements objects combined, lists objects.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_flatten.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple HTML elements — html_flatten","text":"selenider_elements object.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_flatten.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple HTML elements — html_flatten","text":"","code":"html <- \" <div id='id1'><\/div> <div class='.class2'><\/div> <button id='button1'>Click me!<\/button> <div class='button-container'>   <button id='button2'>No, click me!<\/button> <\/div> \"  session <- minimal_selenider_session(html) #> [1] \"/tmp/RtmpYVjcaE/file18435e4f0bf8.html\"  button_1 <- s(\"#button1\") button_2 <- s(\"#button2\")  buttons <- html_flatten(button_1, button_2)  buttons |>   html_expect_all(is_enabled) #> Error in if (.f(x, a)) {    return(TRUE)}: argument is of length zero  buttons |>   as.list() |>   lapply(click) #> Error in if (.f(x, a)) {    return(TRUE)}: argument is of length zero  # Doesn't just have to be single elements first_2_divs <- ss(\"div\")[1:2]  html_flatten(first_2_divs, button_2) |>   length() #> Error in if (.f(x, a)) {    return(TRUE)}: argument is of length zero  # We would like to use multiple css selectors and combine the results selectors <- c(   \"#id1\", # Will select 1 element   \"button\", # Will select 2 elements   \"p\" # Will select 0 elements )  lapply(selectors, ss) |>   html_flatten() |>   length() # 3 #> [1] 0  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/html_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Get tag name of an element — html_name","title":"Get tag name of an element — html_name","text":"Get tag name (e.g. \"p\" <p> tag) selenider_element object.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get tag name of an element — html_name","text":"","code":"html_name(x, ...)  # S3 method for selenider_element html_name(x, timeout = NULL, ...)"},{"path":"https://ashbythorpe.github.io/selenider/reference/html_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get tag name of an element — html_name","text":"x selenider_element object. ... used. timeout time wait x exist.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get tag name of an element — html_name","text":"string","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/html_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get tag name of an element — html_name","text":"","code":"html <- \" <div class='mydiv'><\/div> \" session <- minimal_selenider_session(html) #> [1] \"/tmp/RtmpYVjcaE/file18436a469be3.html\"  s(\".mydiv\") |>   html_name() #> Error in get_element_for_action(x, action = action, conditions = list(),     timeout = timeout, failure_messages = c(), conditions_text = c(),     call = call): To get the tag name of `x`, it must exist. #> ℹ After 4 seconds, `x` was not present.  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/html_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the number of elements in a collection — html_size","title":"Get the number of elements in a collection — html_size","text":"Get number elements HTML element collection, waiting parent elements () exist returning value. length() html_size() can used interchangeably, difference html_size() allows specify timeout.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the number of elements in a collection — html_size","text":"","code":"html_size(x, timeout = NULL)  # S3 method for selenider_elements length(x)"},{"path":"https://ashbythorpe.github.io/selenider/reference/html_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the number of elements in a collection — html_size","text":"x selenider_elements object. timeout time wait parent x () exist.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the number of elements in a collection — html_size","text":"integer representing number elements collection.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the number of elements in a collection — html_size","text":"","code":"html <- \" <div><\/div> <div><\/div> <div><\/div> <div><\/div> \" session <- minimal_selenider_session(html) #> [1] \"/tmp/RtmpYVjcaE/file184349f82233.html\"  ss(\"div\") |>   length() #> [1] 0  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/html_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Get element text — html_text","title":"Get element text — html_text","text":"Get inner text selenider_element object.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get element text — html_text","text":"","code":"html_text(x, ...)  # S3 method for selenider_element html_text(x, timeout = NULL, ...)"},{"path":"https://ashbythorpe.github.io/selenider/reference/html_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get element text — html_text","text":"x selenider_element object. ... used. timeout time wait x exist.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/html_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get element text — html_text","text":"string","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/html_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get element text — html_text","text":"","code":"html <- \" <p>Example text<\/p> \"  session <- minimal_selenider_session(html) #> [1] \"/tmp/RtmpYVjcaE/file184319e9c875.html\"  s(\"p\") |>   html_text() #> Error in get_element_for_action(x, action = action, conditions = list(),     timeout = timeout, failure_messages = c(), conditions_text = c(),     call = call): To get the text inside `x`, it must exist. #> ℹ After 4 seconds, `x` was not present.  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/is_enabled.html","id":null,"dir":"Reference","previous_headings":"","what":"Is an element enabled? — is_enabled","title":"Is an element enabled? — is_enabled","text":"is_disabled() checks element disabled attribute set TRUE, is_enabled() checks . functions throw error element exist DOM.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/is_enabled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is an element enabled? — is_enabled","text":"","code":"is_enabled(x)  is_disabled(x)"},{"path":"https://ashbythorpe.github.io/selenider/reference/is_enabled.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is an element enabled? — is_enabled","text":"x selenider_element object.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/is_enabled.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is an element enabled? — is_enabled","text":"boolean value: TRUE FALSE.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/is_enabled.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Is an element enabled? — is_enabled","text":"functions implement retry mechanism, test condition . Use html_expect() html_wait_until() use conditions tests.","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/is_enabled.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is an element enabled? — is_enabled","text":"","code":"html <- \" <button><\/button> <button disabled><\/button> \"  session <- minimal_selenider_session(html) #> [1] \"/tmp/RtmpYVjcaE/file184346e4aeb0.html\"  is_enabled(s(\"button\")) # TRUE #> Error in is_enabled(s(\"button\")): `x` does not exist in the DOM.  is_disabled(ss(\"button\")[[2]]) # TRUE #> Error in is_enabled(x): `x` does not exist in the DOM.  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/is_present.html","id":null,"dir":"Reference","previous_headings":"","what":"Does an element exist? — is_present","title":"Does an element exist? — is_present","text":"is_present() is_in_dom() checks element present page, is_missing() is_absent() checks opposite.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/is_present.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does an element exist? — is_present","text":"","code":"is_present(x)  is_in_dom(x)  is_absent(x)"},{"path":"https://ashbythorpe.github.io/selenider/reference/is_present.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does an element exist? — is_present","text":"x selenider_element object.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/is_present.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does an element exist? — is_present","text":"boolean value: TRUE FALSE.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/is_present.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Does an element exist? — is_present","text":"functions implement retry mechanism, test condition . Use html_expect() html_wait_until() use conditions tests.","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/is_present.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Does an element exist? — is_present","text":"","code":"html <- \" <p class='class1'><\/p> \"  session <- minimal_selenider_session(html) #> [1] \"/tmp/RtmpYVjcaE/file18437be68aed.html\"  is_present(s(\".class1\")) # TRUE #> [1] FALSE  is_in_dom(s(\".class2\")) # FALSE #> [1] FALSE  is_absent(s(\".class2\")) # TRUE #> [1] TRUE  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/is_visible.html","id":null,"dir":"Reference","previous_headings":"","what":"Is an element visible? — is_visible","title":"Is an element visible? — is_visible","text":"is_visible() is_displayed() checks element can seen page, is_invisible() is_hidden() checks opposite. functions throw error element DOM.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/is_visible.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is an element visible? — is_visible","text":"","code":"is_visible(x)  is_displayed(x)  is_hidden(x)  is_invisible(x)"},{"path":"https://ashbythorpe.github.io/selenider/reference/is_visible.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is an element visible? — is_visible","text":"x selenider_element object.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/is_visible.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is an element visible? — is_visible","text":"boolean value: TRUE FALSE.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/is_visible.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Is an element visible? — is_visible","text":"functions implement retry mechanism, test condition . Use html_expect() html_wait_until() use conditions tests.","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/is_visible.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is an element visible? — is_visible","text":"","code":"html <- \" <div style='visibility:hidden;'>Content 1<\/div> <div style='display:none'>Content 2<\/div> <div>Content 3<\/div> \"  session <- minimal_selenider_session(html) #> [1] \"/tmp/RtmpYVjcaE/file18437299944f.html\"  is_visible(s(\"div\")) # FALSE #> Error in is_visible(s(\"div\")): `x` does not exist in the DOM.  is_invisible(ss(\"div\")[[2]]) # TRUE #> Error in is_visible(x): `x` does not exist in the DOM.  is_visible(ss(\"div\")[[3]]) # TRUE #> Error in is_visible(ss(\"div\")[[3]]): `x` does not exist in the DOM.  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Special keys — keys","title":"Special keys — keys","text":"List special keys, use send_keys().","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Special keys — keys","text":"","code":"keys"},{"path":"https://ashbythorpe.github.io/selenider/reference/keys.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Special keys — keys","text":"object class list length 29.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/keys.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Special keys — keys","text":"","code":"keys$backspace #> [BACKSPACE]"},{"path":"https://ashbythorpe.github.io/selenider/reference/minimal_selenider_session.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a session with custom HTML — minimal_selenider_session","title":"Create a session with custom HTML — minimal_selenider_session","text":"Create selenider_session using custom HTML/JavaScript. Similar rvest::minimal_html().","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/minimal_selenider_session.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a session with custom HTML — minimal_selenider_session","text":"","code":"minimal_selenider_session(html, js = NULL, ..., .env = rlang::caller_env())"},{"path":"https://ashbythorpe.github.io/selenider/reference/minimal_selenider_session.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a session with custom HTML — minimal_selenider_session","text":"html string use HTML. js string (NULL) use JavaScript. ... Passed selenider_session(). .env environment session used.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/minimal_selenider_session.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a session with custom HTML — minimal_selenider_session","text":"selenider_session object.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/mock_selenider_session.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a mock session — mock_selenider_session","title":"Create a mock session — mock_selenider_session","text":"Create fake session, can used examples testing.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/mock_selenider_session.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a mock session — mock_selenider_session","text":"","code":"mock_selenider_session(   browser = c(\"chrome\", \"firefox\", \"phantomjs\", \"internet explorer\"),   timeout = 4,   driver = NULL,   local = TRUE,   quiet = TRUE,   .env = rlang::caller_env() )"},{"path":"https://ashbythorpe.github.io/selenider/reference/mock_selenider_session.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a mock session — mock_selenider_session","text":"browser name browser run session . timeout default time wait collecting element. driver driver object use instead creating one manually. local Whether set session local session object, using local_session(). quiet used. .env Passed local_session() function, define environment session used. Change want create session inside function use outside function.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/mock_selenider_session.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a mock session — mock_selenider_session","text":"selenider_session object.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/mock_selenider_session.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a mock session — mock_selenider_session","text":"","code":"mock_selenider_session() #> A selenider session"},{"path":"https://ashbythorpe.github.io/selenider/reference/open_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Open a URL — open_url","title":"Open a URL — open_url","text":"Navigate browser specified URL, waiting page considered open finishing.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/open_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open a URL — open_url","text":"","code":"open_url(url, session = NULL)"},{"path":"https://ashbythorpe.github.io/selenider/reference/open_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open a URL — open_url","text":"url URL navigate : string. session `selenider_session object. specified, global session object (result get_session()) used.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/open_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open a URL — open_url","text":"session object, invisibly.","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/open_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open a URL — open_url","text":"","code":"session <- selenider_session()  open_url(\"https://r-project.org\")  # Or: open_url(session = session, \"https://r-project.org\") #> Error in private$register_event_listener(\"Page.loadEventFired\", callback_,     timeout_): Session F119CE9404BFFBDBE5C859C38667FF8F is closed.  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/reload.html","id":null,"dir":"Reference","previous_headings":"","what":"Reload the current page — reload","title":"Reload the current page — reload","text":"reload() refresh() reload current page.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/reload.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reload the current page — reload","text":"","code":"reload(session = NULL)  refresh(session = NULL)"},{"path":"https://ashbythorpe.github.io/selenider/reference/reload.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reload the current page — reload","text":"session `selenider_session object. specified, global session object (result get_session()) used.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/reload.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reload the current page — reload","text":"session object, invisibly.","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/reload.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reload the current page — reload","text":"","code":"session <- selenider_session()  open_url(\"https://r-project.org\")  reload()  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/s.html","id":null,"dir":"Reference","previous_headings":"","what":"Quickly select HTML elements — s","title":"Quickly select HTML elements — s","text":"s() ss() allow select elements without specifying session object. s() selects single element, shorthand html_element() current session. ss() selects multiple elements, shorthand html_elements().","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/s.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quickly select HTML elements — s","text":"","code":"s(   css = NULL,   xpath = NULL,   id = NULL,   class_name = NULL,   name = NULL,   link_text = NULL )  ss(   css = NULL,   xpath = NULL,   id = NULL,   class_name = NULL,   name = NULL,   link_text = NULL )"},{"path":"https://ashbythorpe.github.io/selenider/reference/s.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quickly select HTML elements — s","text":"css css selector. xpath XPath. id id element want select. class_name class name element want select. name name attribute element want select. link_text link text link element like select.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/s.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quickly select HTML elements — s","text":"s() returns selenider_element object. s() returns selenider_elements object.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/s.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Quickly select HTML elements — s","text":"functions allow starting point chains selectors made concise. use get_session() get global session object.","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/s.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quickly select HTML elements — s","text":"","code":"html <- \" <div> <p id='id1' class='inner'><\/p> <div class='child'> <p class='inner'><\/p> <\/div> <\/div> \"  session <- minimal_selenider_session(html) #> [1] \"/tmp/RtmpYVjcaE/file18437bd96f25.html\"  s(\"#id1\") #> A selenider element selecting: #> The first element with css selector \"#id1\"  # This is the equivalent of: html_element(session, \"id1\") #> A selenider element selecting: #> The first element with css selector \"id1\"  ss(\".inner\") #> A collection of selenider elements selecting: #> The elements with css selector \".inner\"  # This is the equivalent of: html_element(session, \".inner\") #> A selenider element selecting: #> The first element with css selector \".inner\"  # This provides a more concise way to begin a chain of selectors s(\"div\") |>   html_element(\".child\") |>   html_element(\".inner\") #> A selenider element selecting: #> • The first element with css selector \"div\" #> • The first child element with css selector \".child\" #> • The first child element with css selector \".inner\"  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/scroll_to.html","id":null,"dir":"Reference","previous_headings":"","what":"Scroll to an element — scroll_to","title":"Scroll to an element — scroll_to","text":"Scrolls HTML element.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/scroll_to.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scroll to an element — scroll_to","text":"","code":"scroll_to(x, js = FALSE, timeout = NULL)"},{"path":"https://ashbythorpe.github.io/selenider/reference/scroll_to.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scroll to an element — scroll_to","text":"x selenider_element object. js Whether scroll element using JavaScript. timeout long wait element exist.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/scroll_to.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scroll to an element — scroll_to","text":"x, invisibly","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/scroll_to.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scroll to an element — scroll_to","text":"","code":"html <- \" <div style = 'height:100%; min-height:100vh'><\/div> <button onclick='checkScrolled()'><\/button> <p>Scroll down to find me!<\/p> \"  js <- \" function checkScrolled() {   let element = document.getElementsByTagName('p').item(0);   let rect = element.getBoundingClientRect();   // If paragraph is in view   if (rect.bottom <= (window.innerHeight || document.documentElement.clientHeight)) {     element.innerText = 'You found me!';   } } \"  session <- minimal_selenider_session(html, js = js) #> [1] \"/tmp/RtmpYVjcaE/file18433c35588f.html\"  s(\"p\") |>   scroll_to()  s(\"button\") |>   click() #> Error in click(s(\"button\")): To click `x`, it must exist. #> ℹ After 4 seconds, `x` was not present.  html_expect(s(\"p\"), has_text(\"You found me!\")) #> Error in html_expect(s(\"p\"), has_text(\"You found me!\")): Condition failed after waiting for 4 seconds: #> `has_text(\"You found me!\")` #> ℹ `x` does not have text \"You found me!\". #> ℹ Actual text: \"\".  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/selenider-package.html","id":null,"dir":"Reference","previous_headings":"","what":"selenider: Concise, lazy and asynchronous wrapper for 'RSelenium' — selenider-package","title":"selenider: Concise, lazy and asynchronous wrapper for 'RSelenium' — selenider-package","text":"wrapper 'RSelenium' much easier use.","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/selenider-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"selenider: Concise, lazy and asynchronous wrapper for 'RSelenium' — selenider-package","text":"Maintainer: Ashby Thorpe ashbythorpe@gmail.com (ORCID)","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/selenider_available.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if selenider can be used — selenider_available","title":"Check if selenider can be used — selenider_available","text":"Checks selenider's dependencies available, environment makes sense open selenider session. skip_if_selenider_unavailable() skips testthat test selenider_available() returns FALSE.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/selenider_available.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if selenider can be used — selenider_available","text":"","code":"selenider_available(session = c(\"chromote\", \"selenium\"), online = TRUE)  skip_if_selenider_unavailable(session = c(\"chromote\", \"selenium\"))"},{"path":"https://ashbythorpe.github.io/selenider/reference/selenider_available.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if selenider can be used — selenider_available","text":"session session check. \"chromote\" used default. online Whether need check internet connection.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/selenider_available.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if selenider can be used — selenider_available","text":"boolean flag: TRUE FALSE.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/selenider_available.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if selenider can be used — selenider_available","text":"Specifically, following checked: SELENIDER_AVAILABLE environment variable. Set \"TRUE\" \"FALSE\" override function. Whether CRAN (using NOT_CRAN environment variable). , function returns FALSE. Whether internet connection available (using curl::nslookup()). session \"chromote\", also check: Whether chromote installed. Whether chromote::find_chrome() error. session \"selenium\", check: Whether RSelenium installed. Whether can find valid browser supported RSelenium.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/selenider_available.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if selenider can be used — selenider_available","text":"","code":"selenider_available() #> [1] TRUE"},{"path":"https://ashbythorpe.github.io/selenider/reference/selenider_cleanup.html","id":null,"dir":"Reference","previous_headings":"","what":"Cleanup after an example — selenider_cleanup","title":"Cleanup after an example — selenider_cleanup","text":"Clean selenider example, making sure environment variables reset connections left open.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/selenider_cleanup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cleanup after an example — selenider_cleanup","text":"","code":"selenider_cleanup(close_session = TRUE, env = rlang::caller_env())"},{"path":"https://ashbythorpe.github.io/selenider/reference/selenider_cleanup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cleanup after an example — selenider_cleanup","text":"close_session Whether still local session needs closed (via withr::deferred_run()). usually case. env environment get local session.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/selenider_prefer.html","id":null,"dir":"Reference","previous_headings":"","what":"Compatibility with rvest — selenider_prefer","title":"Compatibility with rvest — selenider_prefer","text":"functions ensure compatibility rvest xml2. selenider_prefer() ensures functions common selenider rvest (e.g. html_attr()) work selenider elements rvest node objects. conflicted used resolve function conflicts. selenider allows xml2::read_html() rvest::html_table() work selenider_element selenider_session objects.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/selenider_prefer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compatibility with rvest — selenider_prefer","text":"","code":"selenider_prefer(quiet = TRUE)  read_html.selenider_session(   x,   encoding = \"\",   ...,   options = c(\"RECOVER\", \"NOERROR\", \"NOBLANKS\") )  read_html.selenider_element(   x,   encoding = \"\",   timeout = NULL,   outer = TRUE,   ...,   options = c(\"RECOVER\", \"NOERROR\", \"NOBLANKS\") )  html_table.selenider_session(   x,   header = NA,   trim = TRUE,   fill = deprecated(),   dec = \".\",   na.strings = \"NA\",   convert = TRUE )  html_table.selenider_element(   x,   header = NA,   trim = TRUE,   fill = deprecated(),   dec = \".\",   na.strings = \"NA\",   convert = TRUE )"},{"path":"https://ashbythorpe.github.io/selenider/reference/selenider_prefer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compatibility with rvest — selenider_prefer","text":"quiet TRUE, output conflicted::conflict_prefer() suppressed. x selenider_session/selenider_element object. encoding, ..., options Passed xml2::read_html(). timeout long wait x exist DOM throwing error. outer Whether read inner (children current element) outer (including element ) HTML x. header, trim, fill, dec, na.strings, convert Passed rvest::html_table().","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/selenider_prefer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compatibility with rvest — selenider_prefer","text":"read_html() returns XML document. html_table() returns tibble list tibbles (applied page).","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/selenider_prefer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compatibility with rvest — selenider_prefer","text":"","code":"library(rvest) #>  #> Attaching package: ‘rvest’ #> The following objects are masked from ‘package:selenider’: #>  #>     back, forward, html_attr, html_attrs, html_children, html_element, #>     html_elements, html_name, html_text selenider_prefer(quiet = FALSE) #> [conflicted] Will prefer selenider::html_attr over any other package. #> [conflicted] Will prefer selenider::html_attrs over any other package. #> [conflicted] Will prefer selenider::html_element over any other package. #> [conflicted] Will prefer selenider::html_elements over any other package. #> [conflicted] Will prefer selenider::html_name over any other package. #> [conflicted] Will prefer selenider::html_text over any other package.  html <- \" <div> <p>Example text<\/p> <\/div>  <table>   <tr>     <th>Column 1<\/th>     <th>Column 2<\/th>   <\/tr>   <tr>     <td>10<\/td>     <td>Data<\/td>   <\/tr> <\/table> \"  session <- minimal_selenider_session(html) #> [1] \"/tmp/RtmpYVjcaE/file18438447890.html\"  read_html(session) #> Error in self$send_command(msg, callback = callback_, error = error_,     timeout = timeout_): Session 131AD1ADCA4196B8E4541DCA691DB8B0 is closed. read_html(s(\"div\")) #> {html_document} #> <html> #> [1] <body><div class=\"container page\">\\n      <div class=\"row\">\\n        <div ...  html_table(s(\"table\")) #> Error in get_element_for_action(x, action = action, conditions = list(),     timeout = timeout, failure_messages = c(), conditions_text = c(),     call = call): To Read the HTML of `x`, it must exist. #> ℹ After seconds, `x` was not present.  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/selenider_session.html","id":null,"dir":"Reference","previous_headings":"","what":"Start a session — selenider_session","title":"Start a session — selenider_session","text":"Begin session selenider, setting session globally unless otherwise specified. create_chromote_session(), create_selenium_client() create_selenium_server() low-level functions allow control making web driver, can passed driver argument selenider_session().","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/selenider_session.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a session — selenider_session","text":"","code":"selenider_session(   session = NULL,   browser = NULL,   view = FALSE,   timeout = 4,   driver = NULL,   local = TRUE,   quiet = TRUE,   .env = rlang::caller_env() )  create_chromote_session(...)  create_selenium_server(   browser,   version = \"latest\",   port = 4567L,   quiet = TRUE,   ... )  create_selenium_client(browser, port = 4567L, ...)"},{"path":"https://ashbythorpe.github.io/selenider/reference/selenider_session.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start a session — selenider_session","text":"session package use backend: either \"chromote\" \"selenium\". default, chromote used, since tends faster reliable. browser name browser run session ; one \"chrome\", \"firefox\", \"phantomjs\" \"internet explorer\" (Windows). NULL, function try work browser installed. using chromote, option ignored, since chromote works Chrome. view Whether open browser view , visual testing. ignored session \"selenium\", since selenium drivers headless. timeout default time wait collecting element. driver driver object use instead creating one manually. can one : chromote::ChromoteSession object (result create_chromote_session()). shinytest2::AppDriver object. RSelenium::remoteDriver() object (result create_selenium_client()). Selenium server object (result wdman::selenium(), create_selenium_server()). case, client object created using server object. list/environment containing RSelenium::remoteDriver() object, Selenium server object, . See Details information providing custom driver object. local Whether set session local session object, using local_session(). quiet Whether let RSelenium::rsDriver() display messages. default, output suppressed, usually useful. Chromote display output creating session. .env Passed local_session() function, define environment session used. Change want create session inside function use outside function. ... Arguments finetune creation specific driver. create_chromote_session(), passed chromote::ChromoteSession$new(). create_selenium_server(), passed wdman::selenium(). create_selenium_server(), passed RSelenium::remoteDriver(). version version webdriver (chromedriver, geckodriver, etc.) use. need change Chrome used, version driver depends version Chrome. port port run Selenium .","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/selenider_session.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start a session — selenider_session","text":"selenider_session object. Use session$driver retrieve driver object controls browser.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/selenider_session.html","id":"structure-of-a-selenider-session","dir":"Reference","previous_headings":"","what":"Structure of a selenider session","title":"Start a session — selenider_session","text":"selenider_session object S3 list, meaning properties can accessed using $. notably, using session$driver allows access driver object actually controls browser. using Selenium, use session$driver$client access remoteDriver object. objects useful want something driver directly supported selenider. See get_actual_element() examples .","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/selenider_session.html","id":"custom-drivers","dir":"Reference","previous_headings":"","what":"Custom drivers","title":"Start a session — selenider_session","text":"Custom driver objects good want low-level control underlying functions create webdrivers actually control browser. However, recommended use selenider functions (e.g. create_selenium_client()) wdman::selenium() better error messages reliable behaviour.","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/selenider_session.html","id":"chromote","dir":"Reference","previous_headings":"","what":"Chromote","title":"Start a session — selenider_session","text":"Supplying custom chromote::ChromoteSession object can allow manage underlying chromote::Chromote process used spawn sessions. example:   can also supply shinytest2::AppDriver object, allowing selenider shinytest2 share session:","code":"my_chromote_object <- chromote::Chromote$new()  session <- selenider_session(   driver = create_chromote_session(parent = my_chromote_object) ) shiny_app <- shiny::shinyApp(   ui = shiny::fluidPage(     # ... Your UI   ),   server = function(input, output) {     # ... Your server   } )  app <- shinytest2::AppDriver$new()  session <- selenider_session(   driver = app )"},{"path":"https://ashbythorpe.github.io/selenider/reference/selenider_session.html","id":"rselenium","dir":"Reference","previous_headings":"","what":"RSelenium","title":"Start a session — selenider_session","text":"want manually create client server, can equivalent following:   However, can sometimes useful omit server, example running Selenium server using Docker. case, need make sure ip port matched correctly.","code":"session <- selenider_session(   driver = list(     client = create_selenium_client(\"chrome\"),     server = create_selenium_server(\"chrome\")   ) ) session <- selenider_session(   driver = create_selenium_client(     remoteServerAddr = \"<IP ADDRESS>\",     port = 1234L   ) )"},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/selenider_session.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a session — selenider_session","text":"","code":"session_1 <- selenider_session(timeout = 10) # session_1 is the local session here  get_session() # Returns session 1 #> A selenider session  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }  my_function <- function() {   session_2 <- selenider_session()    # In here, session_2 is the local session   get_session()   # \\dontshow{   # Clean up all connections and invalidate default chromote object   selenider_cleanup()   # } } # When the function finishes executing, the session is closed  my_function() # Returns `session_2`  # If we want to use a session outside the scope of a function, # we need to use the `.env` argument. create_session <- function(timeout = 10, .env = rlang::caller_env()) {   # caller_env() is the environment where the function is called   selenider_session(timeout = timeout, .env = .env) }  my_session <- create_session()  # We can now use this session outside the `create_session()` function get_session() #> A selenider session  # `my_session` will be closed automatically.  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/set_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the value of an input — set_value","title":"Set the value of an input — set_value","text":"set_value() sets value HTML input element string.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/set_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the value of an input — set_value","text":"","code":"set_value(x, text, timeout = NULL)  send_keys(x, ..., modifiers = NULL, timeout = NULL)  clear_value(x, timeout = NULL)"},{"path":"https://ashbythorpe.github.io/selenider/reference/set_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the value of an input — set_value","text":"x selenider_element object. send_keys(), can NULL, meaning keys sent current page instead specific element. text string set value input element . timeout long wait element exist. ... set inputs send x. modifiers character vector; one \"shift\", \"ctrl\"/\"control\", \"alt\", \"command\"/meta\". Note using chromote backend, work Mac.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/set_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the value of an input — set_value","text":"x, invisibly","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/set_value.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the value of an input — set_value","text":"send_keys() sends set inputs element. clear_value() sets value HTML element \"\", removing existing content.","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/set_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the value of an input — set_value","text":"","code":"html <- \" <input type='text' oninput='recordChange(event)' onkeypress='return checkEnter(event);'> <p><\/p> \"  js <- \" function recordChange(e) {   document.getElementsByTagName('p').item(0).innerText = e.target.value; }  function checkEnter(e) {   // If the key pressed was Enter   if (e.keyCode == 13) {     document.getElementsByTagName('p').item(0).innerText = 'Enter pressed!';     return false;   }   return true; } \"  session <- minimal_selenider_session(html, js = js) #> [1] \"/tmp/RtmpYVjcaE/file1843288fb8e5.html\"  html_expect(s(\"p\"), has_exact_text(\"\"))  input <- s(\"input\")  set_value(input, \"my text\") #> Error in set_value(input, \"my text\"): To set the value of `x`, it must exist. #> ℹ After 4 seconds, `x` was not present.  html_expect(s(\"p\"), has_text(\"my text\")) #> Error in html_expect(s(\"p\"), has_text(\"my text\")): Condition failed after waiting for 4 seconds: #> `has_text(\"my text\")` #> ℹ `x` does not have text \"my text\". #> ℹ Actual text: \"\".  clear_value(input) #> Error in clear_value(input): To send keys to `x`, it must exist. #> ℹ After 4 seconds, `x` was not present.  html_expect(s(\"p\"), has_exact_text(\"\"))  send_keys(input, keys$enter) #> Error in send_keys(input, keys$enter): To send keys to `x`, it must exist. #> ℹ After 4 seconds, `x` was not present.  html_expect(s(\"p\"), has_text(\"Enter pressed!\")) #> Error in html_expect(s(\"p\"), has_text(\"Enter pressed!\")): Condition failed after waiting for 4 seconds: #> `has_text(\"Enter pressed!\")` #> ℹ `x` does not have text \"Enter pressed!\". #> ℹ Actual text: \"\".  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/submit.html","id":null,"dir":"Reference","previous_headings":"","what":"Submit an element — submit","title":"Submit an element — submit","text":"element ancestor form, submits form. Works walking DOM, checking ancestor element element ","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/submit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Submit an element — submit","text":"","code":"submit(x, js = FALSE, timeout = NULL)"},{"path":"https://ashbythorpe.github.io/selenider/reference/submit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Submit an element — submit","text":"x selenider_element object. js Whether submit form using JavaScript. timeout long wait element exist.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/submit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Submit an element — submit","text":"x, invisibly","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/submit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Submit an element — submit","text":"","code":"html <- \" <form> <input type='submit'> <p>Random text<\/p> <\/form> <a>Random link<\/a> \"  session <- minimal_selenider_session(html) #> [1] \"/tmp/RtmpYVjcaE/file1843109c1d2f.html\"  submit(s(\"input\")) #> Error in submit(s(\"input\")): To submit `x` using JavaScript, it must exist. #> ℹ After 4 seconds, `x` was not present. submit(s(\"p\")) #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7aca9220> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7aca9220> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7aca9220> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa74391100> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa74391100> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa74391100> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76a1fd40> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76a1fd40> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76a1fd40> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa79f25148> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa79f25148> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa79f25148> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa79eaf8d0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa79eaf8d0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa79eaf8d0> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa75690038> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa75690038> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa75690038> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa743917c8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa743917c8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa743917c8> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77373720> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77373720> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77373720> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa782034d8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa782034d8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa782034d8> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa79eb3e08> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa79eb3e08> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa79eb3e08> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77032358> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77032358> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77032358> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa740e3738> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa740e3738> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa740e3738> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78373200> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78373200> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78373200> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa73fc3ce0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa73fc3ce0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa73fc3ce0> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7685c5b8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7685c5b8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7685c5b8> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78580220> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78580220> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78580220> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa74049670> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa74049670> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa74049670> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa796f3850> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa796f3850> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa796f3850> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77f12958> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77f12958> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77f12958> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa799ca898> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa799ca898> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa799ca898> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78ffb258> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78ffb258> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78ffb258> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa744af7a0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa744af7a0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa744af7a0> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa760e7ad8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa760e7ad8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa760e7ad8> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa6f86c688> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa6f86c688> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa6f86c688> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa79095550> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa79095550> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa79095550> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77f6d068> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77f6d068> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77f6d068> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa74499c68> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa74499c68> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa74499c68> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7a32d600> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7a32d600> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7a32d600> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77078788> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77078788> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77078788> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa767dd2c8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa767dd2c8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa767dd2c8> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78d0ea48> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78d0ea48> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78d0ea48> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa73a89bd8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa73a89bd8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa73a89bd8> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa78980000> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa78980000> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa78980000> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77f4e710> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77f4e710> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77f4e710> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76275428> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76275428> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76275428> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76e90100> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76e90100> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76e90100> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa73033280> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa73033280> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa73033280> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b81fdc0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b81fdc0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b81fdc0> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7482d880> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7482d880> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7482d880> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7519a2b0> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7519a2b0> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7519a2b0> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77aa5420> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77aa5420> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77aa5420> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77dd3f50> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77dd3f50> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77dd3f50> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa76654660> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa76654660> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa76654660> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> Error in submit(s(\"p\")): To submit `x` using JavaScript, it must have a form element as its #> ancestor. #> ℹ After 4 seconds, `x` did not have a form ancestor.  # Won't work since doesn't have a form ancestor try(submit(s(\"a\"), timeout = 0.5)) #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7660b878> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7660b878> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7660b878> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #> $data[[8]] #> [1] 64 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa77f6b810> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa77f6b810> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa77f6b810> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #> $data[[8]] #> [1] 64 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7b29fbe8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7b29fbe8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7b29fbe8> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #> $data[[8]] #> [1] 64 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa75c55be8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa75c55be8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa75c55be8> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #> $data[[8]] #> [1] 64 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7841c338> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7841c338> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7841c338> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #> $data[[8]] #> [1] 64 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> $current_value #> $current_value$increment #> function ()  #> x <<- x + 1 #> <bytecode: 0x55aa79b14868> #> <environment: 0x55aa7a7dbcd8> #>  #> $current_value$get #> function ()  #> x #> <bytecode: 0x55aa79b14a98> #> <environment: 0x55aa7a7dbcd8> #>  #> $current_value$set #> function (y)  #> x <<- y #> <bytecode: 0x55aa79b14d70> #> <environment: 0x55aa7a7dbcd8> #>  #>  #> $data #> $data[[1]] #> [1] 49 #>  #> $data[[2]] #> [1] 51 #>  #> $data[[3]] #> [1] 37 #>  #> $data[[4]] #> [1] 54 #>  #> $data[[5]] #> [1] 38 #>  #> $data[[6]] #> [1] 61 #>  #> $data[[7]] #> [1] 39 #>  #> $data[[8]] #> [1] 64 #>  #>  #> attr(,\"class\") #> [1] \"eager_list\" #> Error in submit(s(\"a\"), timeout = 0.5) :  #>   To submit `x` using JavaScript, it must have a form element as its #> ancestor. #> ℹ After 0.5 seconds, `x` did not have a form ancestor.  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"},{"path":"https://ashbythorpe.github.io/selenider/reference/take_screenshot.html","id":null,"dir":"Reference","previous_headings":"","what":"Take a screenshot of the current page — take_screenshot","title":"Take a screenshot of the current page — take_screenshot","text":"Take screenshot current session state, saving image file.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/take_screenshot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take a screenshot of the current page — take_screenshot","text":"","code":"take_screenshot(file = NULL, view = FALSE, session = NULL)"},{"path":"https://ashbythorpe.github.io/selenider/reference/take_screenshot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take a screenshot of the current page — take_screenshot","text":"file file path save screenshot . view Whether open interactively view screenshot. TRUE file NULL, screenshot deleted viewing. session `selenider_session object. specified, global session object (result get_session()) used.","code":""},{"path":"https://ashbythorpe.github.io/selenider/reference/take_screenshot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take a screenshot of the current page — take_screenshot","text":"session object, invisibly.","code":""},{"path":[]},{"path":"https://ashbythorpe.github.io/selenider/reference/take_screenshot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Take a screenshot of the current page — take_screenshot","text":"","code":"session <- mock_selenider_session()  open_url(\"https://www.google.com\")  file_path <- withr::local_tempfile(fileext = \"png\")  take_screenshot(file_path) #> Error in session$driver$screenshot(file, view = view): unused argument (view = view)  # \\dontshow{ # Clean up all connections and invalidate default chromote object selenider_cleanup() # }"}]
